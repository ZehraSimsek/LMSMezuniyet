/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(router)/watch-course/[enrollId]/page",{

/***/ "(app-pages-browser)/./app/(router)/course-preview/[courseId]/_components/VideoDesc.jsx":
/*!**************************************************************************!*\
  !*** ./app/(router)/course-preview/[courseId]/_components/VideoDesc.jsx ***!
  \**************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// import React from 'react'\n// import VideoPlayer from './VideoPlayer'\n// import Markdown from 'react-markdown'\n// function VideoDesc({ courseInfo, activeChapterIndex, watchMode = false, setChapterCompleted }) {\n//   return (\n//     <div>\n//       <h2 className='text-[20px] font-semibold'>{courseInfo.name}</h2>\n//       <h2 className='text-gray-500 text-[14px] mb-3'>{courseInfo.author}</h2>\n//       <h2>{courseInfo.name}</h2>\n//       <VideoPlayer videoUrl={courseInfo?.chapter[activeChapterIndex]?.video?.url} poster={!watchMode ? courseInfo?.banner?.url : null} />\n//       <h2 className='mt-5 text-[17px] font-semibold'>\n//         {\n//           watchMode ?\n//             <span className='flex justify-between items-center'>{courseInfo?.chapter[activeChapterIndex]?.name}\n//               <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n//                 onClick={() => setChapterCompleted(courseInfo?.chapter[activeChapterIndex]?.id)}\n//               >\n//                 Tamamlandı\n//               </button>\n//             </span> :\n//             <span>Kurs Hakkında..</span>\n//         }\n//       </h2>\n//       <div>\n//         {\n//           watchMode ?\n//             <Markdown className=\"text-[12px] font-light mt-2 loading-6\">{courseInfo?.chapter[activeChapterIndex]?.shortDesc}</Markdown>\n//             : <Markdown className=\"text-[12px] font-light mt-2 loading-6\">{courseInfo.description}</Markdown>\n//         }\n//       </div>\n//     </div>\n//   )\n// }\n// export default VideoDesc\n// import React, { useState , useEffect} from 'react'\n// import VideoPlayer from './VideoPlayer'\n// import Markdown from 'react-markdown'\n// function VideoDesc({ courseInfo, activeChapterIndex, watchMode = false, setChapterCompleted }) {\n//   const [completedChapters, setCompletedChapters] = useState([]);\n//   useEffect(() => {\n//     const storedChapters = localStorage.getItem('completedChapters');\n//     if (storedChapters) {\n//       setCompletedChapters(JSON.parse(storedChapters));\n//     }\n//   }, []);\n//   const handleChapterCompletion = (chapterId, isCompleted) => {\n//     setChapterCompleted(chapterId, isCompleted);\n//     setCompletedChapters(prevChapters => {\n//       const updatedChapters = [...prevChapters, chapterId];\n//       localStorage.setItem('completedChapters', JSON.stringify(updatedChapters));\n//       return updatedChapters;\n//     });\n//   }\n//   return (\n//     <div>\n//       <h2 className='text-[20px] font-semibold'>{courseInfo.name}</h2>\n//       <h2 className='text-gray-500 text-[14px] mb-3'>{courseInfo.author}</h2>\n//       <h2>{courseInfo.name}</h2>\n//       <VideoPlayer videoUrl={courseInfo?.chapter[activeChapterIndex]?.video?.url} poster={!watchMode ? courseInfo?.banner?.url : null} />\n//       <h2 className='mt-5 text-[17px] font-semibold'>\n//         {\n//           watchMode ?\n//             <span className='flex justify-between items-center'>{courseInfo?.chapter[activeChapterIndex]?.name}\n//               {!completedChapters.includes(courseInfo?.chapter[activeChapterIndex]?.id) && \n//                 <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n//                   onClick={() => handleChapterCompletion(courseInfo?.chapter[activeChapterIndex]?.id, true)}\n//                   disabled={completedChapters.includes(courseInfo?.chapter[activeChapterIndex]?.id)}\n//                 >\n//                   Tamamlandı\n//                 </button>\n//               }\n//             </span> :\n//             <span>Kurs Hakkında..</span>\n//         }\n//       </h2>\n//       <div>\n//         {\n//           watchMode ?\n//             <Markdown className=\"text-[12px] font-light mt-2 loading-6\">{courseInfo?.chapter[activeChapterIndex]?.shortDesc}</Markdown>\n//             : <Markdown className=\"text-[12px] font-light mt-2 loading-6\">{courseInfo.description}</Markdown>\n//         }\n//       </div>\n//     </div>\n//   )\n// }\n// export default VideoDesc\n// import React, { useState, useEffect } from 'react'\n// import VideoPlayer from './VideoPlayer'\n// import Markdown from 'react-markdown'\n// function VideoDesc({ courseInfo, activeChapterIndex, watchMode = false, setChapterCompleted }) {\n//   const [completedChapters, setCompletedChapters] = useState([]);\n//   // useEffect(() => {\n//   //   if (courseInfo?.chapter) {\n//   //     const initialCompletedChapters = courseInfo.chapter.map(chapter => chapter.isCompleted);\n//   //     setCompletedChapters(initialCompletedChapters);\n//   //   }\n//   // }, [courseInfo]);\n//   const handleChapterCompletion = (chapterId) => {\n//     if (!completedChapters[activeChapterIndex]) {\n//       setChapterCompleted(chapterId, true);\n//       setCompletedChapters(prevChapters => {\n//         const updatedChapters = [...prevChapters];\n//         updatedChapters[activeChapterIndex] = true;\n//         return updatedChapters;\n//       });\n//     }\n//   }\n//   useEffect(() => {\n//     if (completedChapters[activeChapterIndex]) {\n//       setCompletedChapters(prevChapters => {\n//         const updatedChapters = [...prevChapters];\n//         updatedChapters[activeChapterIndex] = true;\n//         return updatedChapters;\n//       });\n//     }\n//   }, [completedChapters[activeChapterIndex]]);  \n//   return (\n//     <div>\n//       <h2 className='text-[20px] font-semibold'>{courseInfo.name}</h2>\n//       <h2 className='text-gray-500 text-[14px] mb-3'>{courseInfo.author}</h2>\n//       <h2>{courseInfo.name}</h2>\n//       <VideoPlayer videoUrl={courseInfo?.chapter[activeChapterIndex]?.video?.url} poster={!watchMode ? courseInfo?.banner?.url : null} />\n//       <h2 className='mt-5 text-[17px] font-semibold'>\n//         {\n//           watchMode ?\n//           <span className='flex justify-between items-center'>{courseInfo?.chapter[activeChapterIndex]?.name}\n//             {!completedChapters[activeChapterIndex] && \n//               <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n//                 onClick={() => handleChapterCompletion(courseInfo?.chapter[activeChapterIndex]?.id)}\n//               >\n//                 Tamamlandı\n//               </button>\n//             }\n//           </span> :\n//           <span>Kurs Hakkında..</span>\n//         }\n//       </h2>\n//       <div>\n//         {\n//           watchMode ?\n//             <Markdown className=\"text-[12px] font-light mt-2 loading-6\">{courseInfo?.chapter[activeChapterIndex]?.shortDesc}</Markdown>\n//             : <Markdown className=\"text-[12px] font-light mt-2 loading-6\">{courseInfo.description}</Markdown>\n//         }\n//       </div>\n//     </div>\n//   )\n// }\n// export default VideoDesc\n// import React, { useState , useEffect} from 'react'\n// import VideoPlayer from './VideoPlayer'\n// import Markdown from 'react-markdown'\n// import GlobalApi from '../../../../_utils/GlobalApi'\n// import { useUser } from '@clerk/nextjs'\n// function VideoDesc({ courseInfo, activeChapterIndex, watchMode = false }) {\n//   const { user } = useUser();\n//   const [completedChapters, setCompletedChapters] = useState([]);\n//   useEffect(() => {\n//     const storedChapters = localStorage.getItem('completedChapters');\n//     if (storedChapters) {\n//       setCompletedChapters(JSON.parse(storedChapters));\n//     }\n//   }, []);\n//   useEffect(() => {\n//     GlobalApi.getUserEnrolledCourseDetails(user.primaryEmailAddress.emailAddress)\n//       .then(result => {\n//         setCompletedChapters(result?.userEnrollCourses[0]?.completedChapter || []);\n//       })\n//       .catch(error => {\n//         console.error(\"Failed to fetch completed chapters:\", error);\n//       });\n//   }, [user.primaryEmailAddress.emailAddress]);\n//   const handleChapterCompletion = (chapterId) => {\n//     GlobalApi.markChapterCompleted(user.primaryEmailAddress.emailAddress, chapterId)\n//       .then(() => {\n//         setCompletedChapters(prevChapters => {\n//           const updatedChapters = [...prevChapters, chapterId];\n//           localStorage.setItem('completedChapters', JSON.stringify(updatedChapters));\n//           return updatedChapters;\n//         });\n//       })\n//       .catch(error => {\n//         console.error(\"Failed to mark chapter as completed:\", error);\n//       });\n//   }\n//   return (\n//     <div>\n//       <h2 className='text-[20px] font-semibold'>{courseInfo.name}</h2>\n//       <h2 className='text-gray-500 text-[14px] mb-3'>{courseInfo.author}</h2>\n//       <h2>{courseInfo.name}</h2>\n//       <VideoPlayer videoUrl={courseInfo?.chapter[activeChapterIndex]?.video?.url} poster={!watchMode ? courseInfo?.banner?.url : null} />\n//       <h2 className='mt-5 text-[17px] font-semibold'>\n//         {\n//           watchMode ?\n//             <span className='flex justify-between items-center'>{courseInfo?.chapter[activeChapterIndex]?.name}\n//               {!completedChapters.includes(courseInfo?.chapter[activeChapterIndex]?.id) &&\n//                 <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n//                   onClick={() => handleChapterCompletion(courseInfo?.chapter[activeChapterIndex]?.id)}\n//                   disabled={completedChapters.includes(courseInfo?.chapter[activeChapterIndex]?.id)}\n//                 >\n//                   Tamamlandı\n//                 </button>\n//               }\n//             </span> :\n//             <span>Kurs Hakkında..</span>\n//         }\n//       </h2>\n//       <div>\n//         {\n//           watchMode ?\n//             <Markdown className=\"text-[12px] font-light mt-2 loading-6\">{courseInfo?.chapter[activeChapterIndex]?.shortDesc}</Markdown>\n//             : <Markdown className=\"text-[12px] font-light mt-2 loading-6\">{courseInfo.description}</Markdown>\n//         }\n//       </div>\n//     </div>\n//   )\n// }\n// export default VideoDesc\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/(router)/course-preview/[courseId]/_components/VideoDesc.jsx\n"));

/***/ })

});