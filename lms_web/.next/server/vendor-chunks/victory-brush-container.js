"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/victory-brush-container";
exports.ids = ["vendor-chunks/victory-brush-container"];
exports.modules = {

/***/ "(ssr)/./node_modules/victory-brush-container/lib/brush-helpers.js":
/*!*******************************************************************!*\
  !*** ./node_modules/victory-brush-container/lib/brush-helpers.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.BrushHelpers = void 0;\nvar _defaults2 = _interopRequireDefault(__webpack_require__(/*! lodash/defaults */ \"(ssr)/./node_modules/lodash/defaults.js\"));\nvar _throttle2 = _interopRequireDefault(__webpack_require__(/*! lodash/throttle */ \"(ssr)/./node_modules/lodash/throttle.js\"));\nvar _victoryCore = __webpack_require__(/*! victory-core */ \"(ssr)/./node_modules/victory-core/lib/index.js\");\nvar _reactFastCompare = _interopRequireDefault(__webpack_require__(/*! react-fast-compare */ \"(ssr)/./node_modules/react-fast-compare/index.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst Helpers = {\n  getDimension(props) {\n    const {\n      horizontal,\n      brushDimension\n    } = props;\n    if (!horizontal || !brushDimension) {\n      return brushDimension;\n    }\n    return brushDimension === \"x\" ? \"y\" : \"x\";\n  },\n  withinBounds(point, bounds, padding) {\n    const {\n      x1,\n      x2,\n      y1,\n      y2\n    } = _victoryCore.Helpers.mapValues(bounds, Number);\n    const {\n      x,\n      y\n    } = _victoryCore.Helpers.mapValues(point, Number);\n    const paddingValue = padding ? padding / 2 : 0;\n    return x + paddingValue >= Math.min(x1, x2) && x - paddingValue <= Math.max(x1, x2) && y + paddingValue >= Math.min(y1, y2) && y - paddingValue <= Math.max(y1, y2);\n  },\n  getDomainBox(props, fullDomain, selectedDomain) {\n    const brushDimension = this.getDimension(props);\n    const fullDomainObject = (0, _defaults2.default)({}, fullDomain, props.domain);\n    const selectedDomainObject = (0, _defaults2.default)({}, selectedDomain, fullDomainObject);\n    const fullCoords = _victoryCore.Selection.getDomainCoordinates(props, fullDomainObject);\n    const selectedCoords = _victoryCore.Selection.getDomainCoordinates(props, selectedDomainObject);\n    return {\n      x1: brushDimension !== \"y\" ? Math.min(...selectedCoords.x) : Math.min(...fullCoords.x),\n      x2: brushDimension !== \"y\" ? Math.max(...selectedCoords.x) : Math.max(...fullCoords.x),\n      y1: brushDimension !== \"x\" ? Math.min(...selectedCoords.y) : Math.min(...fullCoords.y),\n      y2: brushDimension !== \"x\" ? Math.max(...selectedCoords.y) : Math.max(...fullCoords.y)\n    };\n  },\n  getHandles(props, domainBox) {\n    const brushDimension = this.getDimension(props);\n    const {\n      x1,\n      x2,\n      y1,\n      y2\n    } = domainBox;\n    const minX = Math.min(x1, x2);\n    const maxX = Math.max(x1, x2);\n    const minY = Math.min(y1, y2);\n    const maxY = Math.max(y1, y2);\n    const handleWidth = props.handleWidth / 2;\n    return {\n      left: brushDimension !== \"y\" && {\n        x1: minX - handleWidth,\n        x2: minX + handleWidth,\n        y1,\n        y2\n      },\n      right: brushDimension !== \"y\" && {\n        x1: maxX - handleWidth,\n        x2: maxX + handleWidth,\n        y1,\n        y2\n      },\n      top: brushDimension !== \"x\" && {\n        x1,\n        x2,\n        y1: minY - handleWidth,\n        y2: minY + handleWidth\n      },\n      bottom: brushDimension !== \"x\" && {\n        x1,\n        x2,\n        y1: maxY - handleWidth,\n        y2: maxY + handleWidth\n      }\n    };\n  },\n  getActiveHandles(point, props, domainBox) {\n    const handles = this.getHandles(props, domainBox);\n    const activeHandles = [\"top\", \"bottom\", \"left\", \"right\"].reduce((memo, opt) => handles[opt] && this.withinBounds(point, handles[opt]) ? memo.concat(opt) : memo, []);\n    return activeHandles.length && activeHandles;\n  },\n  getResizeMutation(box, handles) {\n    const {\n      x1,\n      y1,\n      x2,\n      y2\n    } = box;\n    const mutations = {\n      left: {\n        x1: Math.max(x1, x2),\n        x2: Math.min(x1, x2),\n        y1,\n        y2\n      },\n      right: {\n        x1: Math.min(x1, x2),\n        x2: Math.max(x1, x2),\n        y1,\n        y2\n      },\n      top: {\n        y1: Math.max(y1, y2),\n        y2: Math.min(y1, y2),\n        x1,\n        x2\n      },\n      bottom: {\n        y1: Math.min(y1, y2),\n        y2: Math.max(y1, y2),\n        x1,\n        x2\n      }\n    };\n    return handles.reduce((memo, current) => {\n      return Object.assign(memo, mutations[current]);\n    }, {});\n  },\n  getMinimumDomain() {\n    return {\n      x: [0, 1 / Number.MAX_SAFE_INTEGER],\n      y: [0, 1 / Number.MAX_SAFE_INTEGER]\n    };\n  },\n  getDefaultBrushArea(targetProps, cachedDomain, evt) {\n    const {\n      domain,\n      fullDomain,\n      scale,\n      horizontal,\n      allowResize\n    } = targetProps;\n    const defaultBrushArea = !allowResize && !targetProps.defaultBrushArea ? \"move\" : targetProps.defaultBrushArea;\n    if (defaultBrushArea === \"none\") {\n      return this.getMinimumDomain();\n    } else if (defaultBrushArea === \"disable\") {\n      return cachedDomain;\n    } else if (defaultBrushArea === \"move\") {\n      const brushBox = this.getDomainBox(targetProps, fullDomain, cachedDomain);\n      const parentSVG = targetProps.parentSVG || _victoryCore.Selection.getParentSVG(evt);\n      const pannedBox = this.panBox({\n        ...targetProps,\n        ...brushBox,\n        brushDomain: cachedDomain,\n        startX: (brushBox.x1 + brushBox.x2) / 2,\n        startY: (brushBox.y1 + brushBox.y2) / 2\n      }, _victoryCore.Selection.getSVGEventCoordinates(evt, parentSVG));\n      const fullDomainBox = targetProps.fullDomainBox || this.getDomainBox(targetProps, fullDomain);\n      const constrainedBox = this.constrainBox(pannedBox, fullDomainBox);\n      return _victoryCore.Selection.getBounds({\n        ...constrainedBox,\n        scale,\n        horizontal\n      });\n    }\n    return domain;\n  },\n  getSelectionMutation(point, box, brushDimension) {\n    const {\n      x,\n      y\n    } = point;\n    const {\n      x1,\n      x2,\n      y1,\n      y2\n    } = box;\n    return {\n      x1: brushDimension !== \"y\" ? x : x1,\n      y1: brushDimension !== \"x\" ? y : y1,\n      x2: brushDimension !== \"y\" ? x : x2,\n      y2: brushDimension !== \"x\" ? y : y2\n    };\n  },\n  panBox(props, point) {\n    const {\n      domain,\n      startX,\n      startY\n    } = props;\n    const brushDimension = this.getDimension(props);\n    const brushDomain = (0, _defaults2.default)({}, props.brushDomain, domain);\n    const fullDomain = (0, _defaults2.default)({}, props.fullDomain, domain);\n    const {\n      x1,\n      x2,\n      y1,\n      y2\n    } = props.x1 ? props : this.getDomainBox(props, fullDomain, brushDomain);\n    const {\n      x,\n      y\n    } = point;\n    const delta = {\n      x: startX ? startX - x : 0,\n      y: startY ? startY - y : 0\n    };\n    return {\n      x1: brushDimension !== \"y\" ? Math.min(x1, x2) - delta.x : Math.min(x1, x2),\n      x2: brushDimension !== \"y\" ? Math.max(x1, x2) - delta.x : Math.max(x1, x2),\n      y1: brushDimension !== \"x\" ? Math.min(y1, y2) - delta.y : Math.min(y1, y2),\n      y2: brushDimension !== \"x\" ? Math.max(y1, y2) - delta.y : Math.max(y1, y2)\n    };\n  },\n  constrainBox(box, fullDomainBox) {\n    const {\n      x1,\n      y1,\n      x2,\n      y2\n    } = _victoryCore.Helpers.mapValues(fullDomainBox, Number);\n    return {\n      x1: box.x2 > x2 ? x2 - Math.abs(box.x2 - box.x1) : Math.max(box.x1, x1),\n      y1: box.y2 > y2 ? y2 - Math.abs(box.y2 - box.y1) : Math.max(box.y1, y1),\n      x2: box.x1 < x1 ? x1 + Math.abs(box.x2 - box.x1) : Math.min(box.x2, x2),\n      y2: box.y1 < y1 ? y1 + Math.abs(box.y2 - box.y1) : Math.min(box.y2, y2)\n    };\n  },\n  constrainPoint(point, fullDomainBox) {\n    const {\n      x1,\n      y1,\n      x2,\n      y2\n    } = _victoryCore.Helpers.mapValues(fullDomainBox, Number);\n    return {\n      x: Math.min(Math.max(point.x, x1), x2),\n      y: Math.min(Math.max(point.y, y1), y2)\n    };\n  },\n  hasMoved(props) {\n    const {\n      x1,\n      x2,\n      y1,\n      y2,\n      mouseMoveThreshold\n    } = props;\n    const brushDimension = this.getDimension(props);\n    const xMoved = Math.abs(x1 - x2) >= mouseMoveThreshold;\n    const yMoved = Math.abs(y1 - y2) >= mouseMoveThreshold;\n    switch (brushDimension) {\n      case \"x\":\n        return xMoved;\n      case \"y\":\n        return yMoved;\n      default:\n        return xMoved || yMoved;\n    }\n  },\n  // eslint-disable-next-line max-statements, complexity\n  onMouseDown(evt, targetProps) {\n    evt.preventDefault();\n    const {\n      handleWidth,\n      cachedBrushDomain,\n      domain,\n      allowResize,\n      allowDrag,\n      allowDraw\n    } = targetProps;\n    const brushDimension = this.getDimension(targetProps);\n    const defaultBrushArea = !allowResize && !targetProps.defaultBrushArea ? \"move\" : targetProps.defaultBrushArea;\n    // Don't trigger events for static brushes\n    if (!allowResize && !allowDrag) {\n      return {};\n    }\n    const fullDomainBox = targetProps.fullDomainBox || this.getDomainBox(targetProps, domain);\n    const parentSVG = targetProps.parentSVG || _victoryCore.Selection.getParentSVG(evt);\n    const {\n      x,\n      y\n    } = _victoryCore.Selection.getSVGEventCoordinates(evt, parentSVG);\n    // Ignore events that occur outside of the maximum domain region\n    if (!this.withinBounds({\n      x,\n      y\n    }, fullDomainBox, handleWidth)) {\n      return {};\n    }\n    const brushDomain = (0, _defaults2.default)({}, targetProps.brushDomain, domain);\n    const currentDomain = (0, _reactFastCompare.default)(brushDomain, cachedBrushDomain) ? targetProps.currentDomain || brushDomain || domain : brushDomain || domain;\n    const domainBox = this.getDomainBox(targetProps, domain, currentDomain);\n    const activeHandles = allowResize && this.getActiveHandles({\n      x,\n      y\n    }, targetProps, domainBox);\n    // If the event occurs in any of the handle regions, start a resize\n    if (activeHandles) {\n      return [{\n        target: \"parent\",\n        mutation: () => {\n          return {\n            isSelecting: true,\n            domainBox,\n            fullDomainBox,\n            cachedBrushDomain: brushDomain,\n            currentDomain,\n            parentSVG,\n            ...this.getResizeMutation(domainBox, activeHandles)\n          };\n        }\n      }];\n    } else if (this.withinBounds({\n      x,\n      y\n    }, domainBox) && !(0, _reactFastCompare.default)(domain, currentDomain)) {\n      // if the event occurs within a selected region start a panning event, unless the whole\n      // domain is selected\n      return [{\n        target: \"parent\",\n        mutation: () => ({\n          isPanning: allowDrag,\n          startX: x,\n          startY: y,\n          domainBox,\n          fullDomainBox,\n          currentDomain,\n          cachedBrushDomain: brushDomain,\n          parentSVG,\n          ...domainBox // set x1, x2, y1, y2\n        })\n      }];\n    }\n    // if the event occurs outside the region, or if the whole domain is selected,\n    // start a new selection\n    return allowDraw ? [{\n      target: \"parent\",\n      mutation: () => ({\n        isSelecting: allowResize || defaultBrushArea === \"move\",\n        domainBox,\n        fullDomainBox,\n        parentSVG,\n        cachedBrushDomain: brushDomain,\n        cachedCurrentDomain: currentDomain,\n        currentDomain: this.getMinimumDomain(),\n        ...this.getSelectionMutation({\n          x,\n          y\n        }, domainBox, brushDimension)\n      })\n    }] : {};\n  },\n  // eslint-disable-next-line max-statements, complexity\n  onGlobalMouseMove(evt, targetProps) {\n    const {\n      scale,\n      isPanning,\n      isSelecting,\n      fullDomainBox,\n      onBrushDomainChange,\n      allowResize,\n      allowDrag,\n      horizontal,\n      mouseMoveThreshold,\n      parentSVG\n    } = targetProps;\n    const brushDimension = this.getDimension(targetProps);\n    const {\n      x,\n      y\n    } = _victoryCore.Selection.getSVGEventCoordinates(evt, parentSVG);\n    if (!allowResize && !allowDrag || mouseMoveThreshold > 0 && !this.hasMoved({\n      ...targetProps,\n      x2: x,\n      y2: y\n    })) {\n      return {};\n    }\n    if (allowDrag && isPanning) {\n      const {\n        startX,\n        startY\n      } = targetProps;\n      const pannedBox = this.panBox(targetProps, {\n        x,\n        y\n      });\n      const constrainedBox = this.constrainBox(pannedBox, fullDomainBox);\n      const currentDomain = _victoryCore.Selection.getBounds({\n        ...constrainedBox,\n        scale,\n        horizontal\n      });\n      const mutatedProps = {\n        currentDomain,\n        parentSVG,\n        startX: pannedBox.x2 >= fullDomainBox.x2 || pannedBox.x1 <= fullDomainBox.x1 ? startX : x,\n        startY: pannedBox.y2 >= fullDomainBox.y2 || pannedBox.y1 <= fullDomainBox.y1 ? startY : y,\n        ...constrainedBox\n      };\n      if (_victoryCore.Helpers.isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(currentDomain, (0, _defaults2.default)({}, mutatedProps, targetProps));\n      }\n      return [{\n        target: \"parent\",\n        mutation: () => mutatedProps\n      }];\n    } else if (allowResize && isSelecting) {\n      const {\n        x: x2,\n        y: y2\n      } = this.constrainPoint({\n        x: brushDimension !== \"y\" ? x : targetProps.x2,\n        y: brushDimension !== \"x\" ? y : targetProps.y2\n      }, fullDomainBox);\n      const currentDomain = _victoryCore.Selection.getBounds({\n        x2,\n        y2,\n        x1: targetProps.x1,\n        y1: targetProps.y1,\n        scale,\n        horizontal\n      });\n      const mutatedProps = {\n        x2,\n        y2,\n        currentDomain,\n        parentSVG\n      };\n      if (_victoryCore.Helpers.isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(currentDomain, (0, _defaults2.default)({}, mutatedProps, targetProps));\n      }\n      return [{\n        target: \"parent\",\n        mutation: () => mutatedProps\n      }];\n    }\n    return {};\n  },\n  // eslint-disable-next-line complexity\n  onGlobalMouseUp(evt, targetProps) {\n    // if a panning or selection has not been started, ignore the event\n    if (!targetProps.isPanning && !targetProps.isSelecting) {\n      return {};\n    }\n    // eslint-disable-line max-statements, complexity\n    const {\n      x1,\n      y1,\n      x2,\n      y2,\n      isPanning,\n      isSelecting,\n      onBrushDomainChange,\n      onBrushDomainChangeEnd,\n      onBrushCleared,\n      currentDomain,\n      allowResize,\n      allowDrag\n    } = targetProps;\n    const defaultBrushArea = !allowResize && !targetProps.defaultBrushArea ? \"move\" : targetProps.defaultBrushArea;\n    const defaultBrushHasArea = defaultBrushArea !== undefined && defaultBrushArea !== \"none\";\n    const mutatedProps = {\n      isPanning: false,\n      isSelecting: false\n    };\n\n    // if the mouse hasn't moved since a mouseDown event, select the default brush area\n    if ((allowResize || defaultBrushHasArea) && (x1 === x2 || y1 === y2)) {\n      const cachedDomain = targetProps.cachedCurrentDomain || currentDomain;\n      const defaultDomain = this.getDefaultBrushArea(targetProps, cachedDomain, evt);\n      mutatedProps.currentDomain = defaultDomain;\n      if (_victoryCore.Helpers.isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(defaultDomain, (0, _defaults2.default)({}, mutatedProps, targetProps));\n      }\n      if (_victoryCore.Helpers.isFunction(onBrushDomainChangeEnd)) {\n        onBrushDomainChangeEnd(defaultDomain, (0, _defaults2.default)({}, mutatedProps, targetProps));\n      }\n      if (_victoryCore.Helpers.isFunction(onBrushCleared)) {\n        onBrushCleared(defaultDomain, (0, _defaults2.default)({}, mutatedProps, targetProps));\n      }\n    } else if (allowDrag && isPanning || allowResize && isSelecting) {\n      if (_victoryCore.Helpers.isFunction(onBrushDomainChangeEnd)) {\n        onBrushDomainChangeEnd(currentDomain, (0, _defaults2.default)({}, mutatedProps, targetProps));\n      }\n    }\n    return [{\n      target: \"parent\",\n      mutation: () => mutatedProps\n    }];\n  }\n};\nconst BrushHelpers = exports.BrushHelpers = {\n  ...Helpers,\n  onMouseDown: Helpers.onMouseDown.bind(Helpers),\n  onGlobalMouseUp: Helpers.onGlobalMouseUp.bind(Helpers),\n  onGlobalMouseMove: (0, _throttle2.default)(Helpers.onGlobalMouseMove.bind(Helpers), 16,\n  // eslint-disable-line no-magic-numbers\n  {\n    leading: true,\n    trailing: false\n  })\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdmljdG9yeS1icnVzaC1jb250YWluZXIvbGliL2JydXNoLWhlbHBlcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysb0JBQW9CO0FBQ3BCLHdDQUF3QyxtQkFBTyxDQUFDLGdFQUFpQjtBQUNqRSx3Q0FBd0MsbUJBQU8sQ0FBQyxnRUFBaUI7QUFDakUsbUJBQW1CLG1CQUFPLENBQUMsb0VBQWM7QUFDekMsK0NBQStDLG1CQUFPLENBQUMsNEVBQW9CO0FBQzNFLHVDQUF1Qyx1Q0FBdUM7QUFDOUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLHVEQUF1RDtBQUN2RCwyREFBMkQ7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLElBQUk7QUFDVCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0Esa0RBQWtEO0FBQ2xELGlEQUFpRDtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLGtEQUFrRDtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxNQUFNO0FBQ047QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1AsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFFQUFxRTtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxRUFBcUU7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxRUFBcUU7QUFDckU7QUFDQTtBQUNBLHdFQUF3RTtBQUN4RTtBQUNBO0FBQ0EsZ0VBQWdFO0FBQ2hFO0FBQ0EsTUFBTTtBQUNOO0FBQ0Esd0VBQXdFO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLHFCQUFxQixvQkFBb0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCIsInNvdXJjZXMiOlsid2VicGFjazovL3RlbXAvLi9ub2RlX21vZHVsZXMvdmljdG9yeS1icnVzaC1jb250YWluZXIvbGliL2JydXNoLWhlbHBlcnMuanM/ZTc5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuQnJ1c2hIZWxwZXJzID0gdm9pZCAwO1xudmFyIF9kZWZhdWx0czIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJsb2Rhc2gvZGVmYXVsdHNcIikpO1xudmFyIF90aHJvdHRsZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJsb2Rhc2gvdGhyb3R0bGVcIikpO1xudmFyIF92aWN0b3J5Q29yZSA9IHJlcXVpcmUoXCJ2aWN0b3J5LWNvcmVcIik7XG52YXIgX3JlYWN0RmFzdENvbXBhcmUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJyZWFjdC1mYXN0LWNvbXBhcmVcIikpO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cbmNvbnN0IEhlbHBlcnMgPSB7XG4gIGdldERpbWVuc2lvbihwcm9wcykge1xuICAgIGNvbnN0IHtcbiAgICAgIGhvcml6b250YWwsXG4gICAgICBicnVzaERpbWVuc2lvblxuICAgIH0gPSBwcm9wcztcbiAgICBpZiAoIWhvcml6b250YWwgfHwgIWJydXNoRGltZW5zaW9uKSB7XG4gICAgICByZXR1cm4gYnJ1c2hEaW1lbnNpb247XG4gICAgfVxuICAgIHJldHVybiBicnVzaERpbWVuc2lvbiA9PT0gXCJ4XCIgPyBcInlcIiA6IFwieFwiO1xuICB9LFxuICB3aXRoaW5Cb3VuZHMocG9pbnQsIGJvdW5kcywgcGFkZGluZykge1xuICAgIGNvbnN0IHtcbiAgICAgIHgxLFxuICAgICAgeDIsXG4gICAgICB5MSxcbiAgICAgIHkyXG4gICAgfSA9IF92aWN0b3J5Q29yZS5IZWxwZXJzLm1hcFZhbHVlcyhib3VuZHMsIE51bWJlcik7XG4gICAgY29uc3Qge1xuICAgICAgeCxcbiAgICAgIHlcbiAgICB9ID0gX3ZpY3RvcnlDb3JlLkhlbHBlcnMubWFwVmFsdWVzKHBvaW50LCBOdW1iZXIpO1xuICAgIGNvbnN0IHBhZGRpbmdWYWx1ZSA9IHBhZGRpbmcgPyBwYWRkaW5nIC8gMiA6IDA7XG4gICAgcmV0dXJuIHggKyBwYWRkaW5nVmFsdWUgPj0gTWF0aC5taW4oeDEsIHgyKSAmJiB4IC0gcGFkZGluZ1ZhbHVlIDw9IE1hdGgubWF4KHgxLCB4MikgJiYgeSArIHBhZGRpbmdWYWx1ZSA+PSBNYXRoLm1pbih5MSwgeTIpICYmIHkgLSBwYWRkaW5nVmFsdWUgPD0gTWF0aC5tYXgoeTEsIHkyKTtcbiAgfSxcbiAgZ2V0RG9tYWluQm94KHByb3BzLCBmdWxsRG9tYWluLCBzZWxlY3RlZERvbWFpbikge1xuICAgIGNvbnN0IGJydXNoRGltZW5zaW9uID0gdGhpcy5nZXREaW1lbnNpb24ocHJvcHMpO1xuICAgIGNvbnN0IGZ1bGxEb21haW5PYmplY3QgPSAoMCwgX2RlZmF1bHRzMi5kZWZhdWx0KSh7fSwgZnVsbERvbWFpbiwgcHJvcHMuZG9tYWluKTtcbiAgICBjb25zdCBzZWxlY3RlZERvbWFpbk9iamVjdCA9ICgwLCBfZGVmYXVsdHMyLmRlZmF1bHQpKHt9LCBzZWxlY3RlZERvbWFpbiwgZnVsbERvbWFpbk9iamVjdCk7XG4gICAgY29uc3QgZnVsbENvb3JkcyA9IF92aWN0b3J5Q29yZS5TZWxlY3Rpb24uZ2V0RG9tYWluQ29vcmRpbmF0ZXMocHJvcHMsIGZ1bGxEb21haW5PYmplY3QpO1xuICAgIGNvbnN0IHNlbGVjdGVkQ29vcmRzID0gX3ZpY3RvcnlDb3JlLlNlbGVjdGlvbi5nZXREb21haW5Db29yZGluYXRlcyhwcm9wcywgc2VsZWN0ZWREb21haW5PYmplY3QpO1xuICAgIHJldHVybiB7XG4gICAgICB4MTogYnJ1c2hEaW1lbnNpb24gIT09IFwieVwiID8gTWF0aC5taW4oLi4uc2VsZWN0ZWRDb29yZHMueCkgOiBNYXRoLm1pbiguLi5mdWxsQ29vcmRzLngpLFxuICAgICAgeDI6IGJydXNoRGltZW5zaW9uICE9PSBcInlcIiA/IE1hdGgubWF4KC4uLnNlbGVjdGVkQ29vcmRzLngpIDogTWF0aC5tYXgoLi4uZnVsbENvb3Jkcy54KSxcbiAgICAgIHkxOiBicnVzaERpbWVuc2lvbiAhPT0gXCJ4XCIgPyBNYXRoLm1pbiguLi5zZWxlY3RlZENvb3Jkcy55KSA6IE1hdGgubWluKC4uLmZ1bGxDb29yZHMueSksXG4gICAgICB5MjogYnJ1c2hEaW1lbnNpb24gIT09IFwieFwiID8gTWF0aC5tYXgoLi4uc2VsZWN0ZWRDb29yZHMueSkgOiBNYXRoLm1heCguLi5mdWxsQ29vcmRzLnkpXG4gICAgfTtcbiAgfSxcbiAgZ2V0SGFuZGxlcyhwcm9wcywgZG9tYWluQm94KSB7XG4gICAgY29uc3QgYnJ1c2hEaW1lbnNpb24gPSB0aGlzLmdldERpbWVuc2lvbihwcm9wcyk7XG4gICAgY29uc3Qge1xuICAgICAgeDEsXG4gICAgICB4MixcbiAgICAgIHkxLFxuICAgICAgeTJcbiAgICB9ID0gZG9tYWluQm94O1xuICAgIGNvbnN0IG1pblggPSBNYXRoLm1pbih4MSwgeDIpO1xuICAgIGNvbnN0IG1heFggPSBNYXRoLm1heCh4MSwgeDIpO1xuICAgIGNvbnN0IG1pblkgPSBNYXRoLm1pbih5MSwgeTIpO1xuICAgIGNvbnN0IG1heFkgPSBNYXRoLm1heCh5MSwgeTIpO1xuICAgIGNvbnN0IGhhbmRsZVdpZHRoID0gcHJvcHMuaGFuZGxlV2lkdGggLyAyO1xuICAgIHJldHVybiB7XG4gICAgICBsZWZ0OiBicnVzaERpbWVuc2lvbiAhPT0gXCJ5XCIgJiYge1xuICAgICAgICB4MTogbWluWCAtIGhhbmRsZVdpZHRoLFxuICAgICAgICB4MjogbWluWCArIGhhbmRsZVdpZHRoLFxuICAgICAgICB5MSxcbiAgICAgICAgeTJcbiAgICAgIH0sXG4gICAgICByaWdodDogYnJ1c2hEaW1lbnNpb24gIT09IFwieVwiICYmIHtcbiAgICAgICAgeDE6IG1heFggLSBoYW5kbGVXaWR0aCxcbiAgICAgICAgeDI6IG1heFggKyBoYW5kbGVXaWR0aCxcbiAgICAgICAgeTEsXG4gICAgICAgIHkyXG4gICAgICB9LFxuICAgICAgdG9wOiBicnVzaERpbWVuc2lvbiAhPT0gXCJ4XCIgJiYge1xuICAgICAgICB4MSxcbiAgICAgICAgeDIsXG4gICAgICAgIHkxOiBtaW5ZIC0gaGFuZGxlV2lkdGgsXG4gICAgICAgIHkyOiBtaW5ZICsgaGFuZGxlV2lkdGhcbiAgICAgIH0sXG4gICAgICBib3R0b206IGJydXNoRGltZW5zaW9uICE9PSBcInhcIiAmJiB7XG4gICAgICAgIHgxLFxuICAgICAgICB4MixcbiAgICAgICAgeTE6IG1heFkgLSBoYW5kbGVXaWR0aCxcbiAgICAgICAgeTI6IG1heFkgKyBoYW5kbGVXaWR0aFxuICAgICAgfVxuICAgIH07XG4gIH0sXG4gIGdldEFjdGl2ZUhhbmRsZXMocG9pbnQsIHByb3BzLCBkb21haW5Cb3gpIHtcbiAgICBjb25zdCBoYW5kbGVzID0gdGhpcy5nZXRIYW5kbGVzKHByb3BzLCBkb21haW5Cb3gpO1xuICAgIGNvbnN0IGFjdGl2ZUhhbmRsZXMgPSBbXCJ0b3BcIiwgXCJib3R0b21cIiwgXCJsZWZ0XCIsIFwicmlnaHRcIl0ucmVkdWNlKChtZW1vLCBvcHQpID0+IGhhbmRsZXNbb3B0XSAmJiB0aGlzLndpdGhpbkJvdW5kcyhwb2ludCwgaGFuZGxlc1tvcHRdKSA/IG1lbW8uY29uY2F0KG9wdCkgOiBtZW1vLCBbXSk7XG4gICAgcmV0dXJuIGFjdGl2ZUhhbmRsZXMubGVuZ3RoICYmIGFjdGl2ZUhhbmRsZXM7XG4gIH0sXG4gIGdldFJlc2l6ZU11dGF0aW9uKGJveCwgaGFuZGxlcykge1xuICAgIGNvbnN0IHtcbiAgICAgIHgxLFxuICAgICAgeTEsXG4gICAgICB4MixcbiAgICAgIHkyXG4gICAgfSA9IGJveDtcbiAgICBjb25zdCBtdXRhdGlvbnMgPSB7XG4gICAgICBsZWZ0OiB7XG4gICAgICAgIHgxOiBNYXRoLm1heCh4MSwgeDIpLFxuICAgICAgICB4MjogTWF0aC5taW4oeDEsIHgyKSxcbiAgICAgICAgeTEsXG4gICAgICAgIHkyXG4gICAgICB9LFxuICAgICAgcmlnaHQ6IHtcbiAgICAgICAgeDE6IE1hdGgubWluKHgxLCB4MiksXG4gICAgICAgIHgyOiBNYXRoLm1heCh4MSwgeDIpLFxuICAgICAgICB5MSxcbiAgICAgICAgeTJcbiAgICAgIH0sXG4gICAgICB0b3A6IHtcbiAgICAgICAgeTE6IE1hdGgubWF4KHkxLCB5MiksXG4gICAgICAgIHkyOiBNYXRoLm1pbih5MSwgeTIpLFxuICAgICAgICB4MSxcbiAgICAgICAgeDJcbiAgICAgIH0sXG4gICAgICBib3R0b206IHtcbiAgICAgICAgeTE6IE1hdGgubWluKHkxLCB5MiksXG4gICAgICAgIHkyOiBNYXRoLm1heCh5MSwgeTIpLFxuICAgICAgICB4MSxcbiAgICAgICAgeDJcbiAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBoYW5kbGVzLnJlZHVjZSgobWVtbywgY3VycmVudCkgPT4ge1xuICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24obWVtbywgbXV0YXRpb25zW2N1cnJlbnRdKTtcbiAgICB9LCB7fSk7XG4gIH0sXG4gIGdldE1pbmltdW1Eb21haW4oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHg6IFswLCAxIC8gTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVJdLFxuICAgICAgeTogWzAsIDEgLyBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUl1cbiAgICB9O1xuICB9LFxuICBnZXREZWZhdWx0QnJ1c2hBcmVhKHRhcmdldFByb3BzLCBjYWNoZWREb21haW4sIGV2dCkge1xuICAgIGNvbnN0IHtcbiAgICAgIGRvbWFpbixcbiAgICAgIGZ1bGxEb21haW4sXG4gICAgICBzY2FsZSxcbiAgICAgIGhvcml6b250YWwsXG4gICAgICBhbGxvd1Jlc2l6ZVxuICAgIH0gPSB0YXJnZXRQcm9wcztcbiAgICBjb25zdCBkZWZhdWx0QnJ1c2hBcmVhID0gIWFsbG93UmVzaXplICYmICF0YXJnZXRQcm9wcy5kZWZhdWx0QnJ1c2hBcmVhID8gXCJtb3ZlXCIgOiB0YXJnZXRQcm9wcy5kZWZhdWx0QnJ1c2hBcmVhO1xuICAgIGlmIChkZWZhdWx0QnJ1c2hBcmVhID09PSBcIm5vbmVcIikge1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0TWluaW11bURvbWFpbigpO1xuICAgIH0gZWxzZSBpZiAoZGVmYXVsdEJydXNoQXJlYSA9PT0gXCJkaXNhYmxlXCIpIHtcbiAgICAgIHJldHVybiBjYWNoZWREb21haW47XG4gICAgfSBlbHNlIGlmIChkZWZhdWx0QnJ1c2hBcmVhID09PSBcIm1vdmVcIikge1xuICAgICAgY29uc3QgYnJ1c2hCb3ggPSB0aGlzLmdldERvbWFpbkJveCh0YXJnZXRQcm9wcywgZnVsbERvbWFpbiwgY2FjaGVkRG9tYWluKTtcbiAgICAgIGNvbnN0IHBhcmVudFNWRyA9IHRhcmdldFByb3BzLnBhcmVudFNWRyB8fCBfdmljdG9yeUNvcmUuU2VsZWN0aW9uLmdldFBhcmVudFNWRyhldnQpO1xuICAgICAgY29uc3QgcGFubmVkQm94ID0gdGhpcy5wYW5Cb3goe1xuICAgICAgICAuLi50YXJnZXRQcm9wcyxcbiAgICAgICAgLi4uYnJ1c2hCb3gsXG4gICAgICAgIGJydXNoRG9tYWluOiBjYWNoZWREb21haW4sXG4gICAgICAgIHN0YXJ0WDogKGJydXNoQm94LngxICsgYnJ1c2hCb3gueDIpIC8gMixcbiAgICAgICAgc3RhcnRZOiAoYnJ1c2hCb3gueTEgKyBicnVzaEJveC55MikgLyAyXG4gICAgICB9LCBfdmljdG9yeUNvcmUuU2VsZWN0aW9uLmdldFNWR0V2ZW50Q29vcmRpbmF0ZXMoZXZ0LCBwYXJlbnRTVkcpKTtcbiAgICAgIGNvbnN0IGZ1bGxEb21haW5Cb3ggPSB0YXJnZXRQcm9wcy5mdWxsRG9tYWluQm94IHx8IHRoaXMuZ2V0RG9tYWluQm94KHRhcmdldFByb3BzLCBmdWxsRG9tYWluKTtcbiAgICAgIGNvbnN0IGNvbnN0cmFpbmVkQm94ID0gdGhpcy5jb25zdHJhaW5Cb3gocGFubmVkQm94LCBmdWxsRG9tYWluQm94KTtcbiAgICAgIHJldHVybiBfdmljdG9yeUNvcmUuU2VsZWN0aW9uLmdldEJvdW5kcyh7XG4gICAgICAgIC4uLmNvbnN0cmFpbmVkQm94LFxuICAgICAgICBzY2FsZSxcbiAgICAgICAgaG9yaXpvbnRhbFxuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBkb21haW47XG4gIH0sXG4gIGdldFNlbGVjdGlvbk11dGF0aW9uKHBvaW50LCBib3gsIGJydXNoRGltZW5zaW9uKSB7XG4gICAgY29uc3Qge1xuICAgICAgeCxcbiAgICAgIHlcbiAgICB9ID0gcG9pbnQ7XG4gICAgY29uc3Qge1xuICAgICAgeDEsXG4gICAgICB4MixcbiAgICAgIHkxLFxuICAgICAgeTJcbiAgICB9ID0gYm94O1xuICAgIHJldHVybiB7XG4gICAgICB4MTogYnJ1c2hEaW1lbnNpb24gIT09IFwieVwiID8geCA6IHgxLFxuICAgICAgeTE6IGJydXNoRGltZW5zaW9uICE9PSBcInhcIiA/IHkgOiB5MSxcbiAgICAgIHgyOiBicnVzaERpbWVuc2lvbiAhPT0gXCJ5XCIgPyB4IDogeDIsXG4gICAgICB5MjogYnJ1c2hEaW1lbnNpb24gIT09IFwieFwiID8geSA6IHkyXG4gICAgfTtcbiAgfSxcbiAgcGFuQm94KHByb3BzLCBwb2ludCkge1xuICAgIGNvbnN0IHtcbiAgICAgIGRvbWFpbixcbiAgICAgIHN0YXJ0WCxcbiAgICAgIHN0YXJ0WVxuICAgIH0gPSBwcm9wcztcbiAgICBjb25zdCBicnVzaERpbWVuc2lvbiA9IHRoaXMuZ2V0RGltZW5zaW9uKHByb3BzKTtcbiAgICBjb25zdCBicnVzaERvbWFpbiA9ICgwLCBfZGVmYXVsdHMyLmRlZmF1bHQpKHt9LCBwcm9wcy5icnVzaERvbWFpbiwgZG9tYWluKTtcbiAgICBjb25zdCBmdWxsRG9tYWluID0gKDAsIF9kZWZhdWx0czIuZGVmYXVsdCkoe30sIHByb3BzLmZ1bGxEb21haW4sIGRvbWFpbik7XG4gICAgY29uc3Qge1xuICAgICAgeDEsXG4gICAgICB4MixcbiAgICAgIHkxLFxuICAgICAgeTJcbiAgICB9ID0gcHJvcHMueDEgPyBwcm9wcyA6IHRoaXMuZ2V0RG9tYWluQm94KHByb3BzLCBmdWxsRG9tYWluLCBicnVzaERvbWFpbik7XG4gICAgY29uc3Qge1xuICAgICAgeCxcbiAgICAgIHlcbiAgICB9ID0gcG9pbnQ7XG4gICAgY29uc3QgZGVsdGEgPSB7XG4gICAgICB4OiBzdGFydFggPyBzdGFydFggLSB4IDogMCxcbiAgICAgIHk6IHN0YXJ0WSA/IHN0YXJ0WSAtIHkgOiAwXG4gICAgfTtcbiAgICByZXR1cm4ge1xuICAgICAgeDE6IGJydXNoRGltZW5zaW9uICE9PSBcInlcIiA/IE1hdGgubWluKHgxLCB4MikgLSBkZWx0YS54IDogTWF0aC5taW4oeDEsIHgyKSxcbiAgICAgIHgyOiBicnVzaERpbWVuc2lvbiAhPT0gXCJ5XCIgPyBNYXRoLm1heCh4MSwgeDIpIC0gZGVsdGEueCA6IE1hdGgubWF4KHgxLCB4MiksXG4gICAgICB5MTogYnJ1c2hEaW1lbnNpb24gIT09IFwieFwiID8gTWF0aC5taW4oeTEsIHkyKSAtIGRlbHRhLnkgOiBNYXRoLm1pbih5MSwgeTIpLFxuICAgICAgeTI6IGJydXNoRGltZW5zaW9uICE9PSBcInhcIiA/IE1hdGgubWF4KHkxLCB5MikgLSBkZWx0YS55IDogTWF0aC5tYXgoeTEsIHkyKVxuICAgIH07XG4gIH0sXG4gIGNvbnN0cmFpbkJveChib3gsIGZ1bGxEb21haW5Cb3gpIHtcbiAgICBjb25zdCB7XG4gICAgICB4MSxcbiAgICAgIHkxLFxuICAgICAgeDIsXG4gICAgICB5MlxuICAgIH0gPSBfdmljdG9yeUNvcmUuSGVscGVycy5tYXBWYWx1ZXMoZnVsbERvbWFpbkJveCwgTnVtYmVyKTtcbiAgICByZXR1cm4ge1xuICAgICAgeDE6IGJveC54MiA+IHgyID8geDIgLSBNYXRoLmFicyhib3gueDIgLSBib3gueDEpIDogTWF0aC5tYXgoYm94LngxLCB4MSksXG4gICAgICB5MTogYm94LnkyID4geTIgPyB5MiAtIE1hdGguYWJzKGJveC55MiAtIGJveC55MSkgOiBNYXRoLm1heChib3gueTEsIHkxKSxcbiAgICAgIHgyOiBib3gueDEgPCB4MSA/IHgxICsgTWF0aC5hYnMoYm94LngyIC0gYm94LngxKSA6IE1hdGgubWluKGJveC54MiwgeDIpLFxuICAgICAgeTI6IGJveC55MSA8IHkxID8geTEgKyBNYXRoLmFicyhib3gueTIgLSBib3gueTEpIDogTWF0aC5taW4oYm94LnkyLCB5MilcbiAgICB9O1xuICB9LFxuICBjb25zdHJhaW5Qb2ludChwb2ludCwgZnVsbERvbWFpbkJveCkge1xuICAgIGNvbnN0IHtcbiAgICAgIHgxLFxuICAgICAgeTEsXG4gICAgICB4MixcbiAgICAgIHkyXG4gICAgfSA9IF92aWN0b3J5Q29yZS5IZWxwZXJzLm1hcFZhbHVlcyhmdWxsRG9tYWluQm94LCBOdW1iZXIpO1xuICAgIHJldHVybiB7XG4gICAgICB4OiBNYXRoLm1pbihNYXRoLm1heChwb2ludC54LCB4MSksIHgyKSxcbiAgICAgIHk6IE1hdGgubWluKE1hdGgubWF4KHBvaW50LnksIHkxKSwgeTIpXG4gICAgfTtcbiAgfSxcbiAgaGFzTW92ZWQocHJvcHMpIHtcbiAgICBjb25zdCB7XG4gICAgICB4MSxcbiAgICAgIHgyLFxuICAgICAgeTEsXG4gICAgICB5MixcbiAgICAgIG1vdXNlTW92ZVRocmVzaG9sZFxuICAgIH0gPSBwcm9wcztcbiAgICBjb25zdCBicnVzaERpbWVuc2lvbiA9IHRoaXMuZ2V0RGltZW5zaW9uKHByb3BzKTtcbiAgICBjb25zdCB4TW92ZWQgPSBNYXRoLmFicyh4MSAtIHgyKSA+PSBtb3VzZU1vdmVUaHJlc2hvbGQ7XG4gICAgY29uc3QgeU1vdmVkID0gTWF0aC5hYnMoeTEgLSB5MikgPj0gbW91c2VNb3ZlVGhyZXNob2xkO1xuICAgIHN3aXRjaCAoYnJ1c2hEaW1lbnNpb24pIHtcbiAgICAgIGNhc2UgXCJ4XCI6XG4gICAgICAgIHJldHVybiB4TW92ZWQ7XG4gICAgICBjYXNlIFwieVwiOlxuICAgICAgICByZXR1cm4geU1vdmVkO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIHhNb3ZlZCB8fCB5TW92ZWQ7XG4gICAgfVxuICB9LFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbWF4LXN0YXRlbWVudHMsIGNvbXBsZXhpdHlcbiAgb25Nb3VzZURvd24oZXZ0LCB0YXJnZXRQcm9wcykge1xuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IHtcbiAgICAgIGhhbmRsZVdpZHRoLFxuICAgICAgY2FjaGVkQnJ1c2hEb21haW4sXG4gICAgICBkb21haW4sXG4gICAgICBhbGxvd1Jlc2l6ZSxcbiAgICAgIGFsbG93RHJhZyxcbiAgICAgIGFsbG93RHJhd1xuICAgIH0gPSB0YXJnZXRQcm9wcztcbiAgICBjb25zdCBicnVzaERpbWVuc2lvbiA9IHRoaXMuZ2V0RGltZW5zaW9uKHRhcmdldFByb3BzKTtcbiAgICBjb25zdCBkZWZhdWx0QnJ1c2hBcmVhID0gIWFsbG93UmVzaXplICYmICF0YXJnZXRQcm9wcy5kZWZhdWx0QnJ1c2hBcmVhID8gXCJtb3ZlXCIgOiB0YXJnZXRQcm9wcy5kZWZhdWx0QnJ1c2hBcmVhO1xuICAgIC8vIERvbid0IHRyaWdnZXIgZXZlbnRzIGZvciBzdGF0aWMgYnJ1c2hlc1xuICAgIGlmICghYWxsb3dSZXNpemUgJiYgIWFsbG93RHJhZykge1xuICAgICAgcmV0dXJuIHt9O1xuICAgIH1cbiAgICBjb25zdCBmdWxsRG9tYWluQm94ID0gdGFyZ2V0UHJvcHMuZnVsbERvbWFpbkJveCB8fCB0aGlzLmdldERvbWFpbkJveCh0YXJnZXRQcm9wcywgZG9tYWluKTtcbiAgICBjb25zdCBwYXJlbnRTVkcgPSB0YXJnZXRQcm9wcy5wYXJlbnRTVkcgfHwgX3ZpY3RvcnlDb3JlLlNlbGVjdGlvbi5nZXRQYXJlbnRTVkcoZXZ0KTtcbiAgICBjb25zdCB7XG4gICAgICB4LFxuICAgICAgeVxuICAgIH0gPSBfdmljdG9yeUNvcmUuU2VsZWN0aW9uLmdldFNWR0V2ZW50Q29vcmRpbmF0ZXMoZXZ0LCBwYXJlbnRTVkcpO1xuICAgIC8vIElnbm9yZSBldmVudHMgdGhhdCBvY2N1ciBvdXRzaWRlIG9mIHRoZSBtYXhpbXVtIGRvbWFpbiByZWdpb25cbiAgICBpZiAoIXRoaXMud2l0aGluQm91bmRzKHtcbiAgICAgIHgsXG4gICAgICB5XG4gICAgfSwgZnVsbERvbWFpbkJveCwgaGFuZGxlV2lkdGgpKSB7XG4gICAgICByZXR1cm4ge307XG4gICAgfVxuICAgIGNvbnN0IGJydXNoRG9tYWluID0gKDAsIF9kZWZhdWx0czIuZGVmYXVsdCkoe30sIHRhcmdldFByb3BzLmJydXNoRG9tYWluLCBkb21haW4pO1xuICAgIGNvbnN0IGN1cnJlbnREb21haW4gPSAoMCwgX3JlYWN0RmFzdENvbXBhcmUuZGVmYXVsdCkoYnJ1c2hEb21haW4sIGNhY2hlZEJydXNoRG9tYWluKSA/IHRhcmdldFByb3BzLmN1cnJlbnREb21haW4gfHwgYnJ1c2hEb21haW4gfHwgZG9tYWluIDogYnJ1c2hEb21haW4gfHwgZG9tYWluO1xuICAgIGNvbnN0IGRvbWFpbkJveCA9IHRoaXMuZ2V0RG9tYWluQm94KHRhcmdldFByb3BzLCBkb21haW4sIGN1cnJlbnREb21haW4pO1xuICAgIGNvbnN0IGFjdGl2ZUhhbmRsZXMgPSBhbGxvd1Jlc2l6ZSAmJiB0aGlzLmdldEFjdGl2ZUhhbmRsZXMoe1xuICAgICAgeCxcbiAgICAgIHlcbiAgICB9LCB0YXJnZXRQcm9wcywgZG9tYWluQm94KTtcbiAgICAvLyBJZiB0aGUgZXZlbnQgb2NjdXJzIGluIGFueSBvZiB0aGUgaGFuZGxlIHJlZ2lvbnMsIHN0YXJ0IGEgcmVzaXplXG4gICAgaWYgKGFjdGl2ZUhhbmRsZXMpIHtcbiAgICAgIHJldHVybiBbe1xuICAgICAgICB0YXJnZXQ6IFwicGFyZW50XCIsXG4gICAgICAgIG11dGF0aW9uOiAoKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGlzU2VsZWN0aW5nOiB0cnVlLFxuICAgICAgICAgICAgZG9tYWluQm94LFxuICAgICAgICAgICAgZnVsbERvbWFpbkJveCxcbiAgICAgICAgICAgIGNhY2hlZEJydXNoRG9tYWluOiBicnVzaERvbWFpbixcbiAgICAgICAgICAgIGN1cnJlbnREb21haW4sXG4gICAgICAgICAgICBwYXJlbnRTVkcsXG4gICAgICAgICAgICAuLi50aGlzLmdldFJlc2l6ZU11dGF0aW9uKGRvbWFpbkJveCwgYWN0aXZlSGFuZGxlcylcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICB9XTtcbiAgICB9IGVsc2UgaWYgKHRoaXMud2l0aGluQm91bmRzKHtcbiAgICAgIHgsXG4gICAgICB5XG4gICAgfSwgZG9tYWluQm94KSAmJiAhKDAsIF9yZWFjdEZhc3RDb21wYXJlLmRlZmF1bHQpKGRvbWFpbiwgY3VycmVudERvbWFpbikpIHtcbiAgICAgIC8vIGlmIHRoZSBldmVudCBvY2N1cnMgd2l0aGluIGEgc2VsZWN0ZWQgcmVnaW9uIHN0YXJ0IGEgcGFubmluZyBldmVudCwgdW5sZXNzIHRoZSB3aG9sZVxuICAgICAgLy8gZG9tYWluIGlzIHNlbGVjdGVkXG4gICAgICByZXR1cm4gW3tcbiAgICAgICAgdGFyZ2V0OiBcInBhcmVudFwiLFxuICAgICAgICBtdXRhdGlvbjogKCkgPT4gKHtcbiAgICAgICAgICBpc1Bhbm5pbmc6IGFsbG93RHJhZyxcbiAgICAgICAgICBzdGFydFg6IHgsXG4gICAgICAgICAgc3RhcnRZOiB5LFxuICAgICAgICAgIGRvbWFpbkJveCxcbiAgICAgICAgICBmdWxsRG9tYWluQm94LFxuICAgICAgICAgIGN1cnJlbnREb21haW4sXG4gICAgICAgICAgY2FjaGVkQnJ1c2hEb21haW46IGJydXNoRG9tYWluLFxuICAgICAgICAgIHBhcmVudFNWRyxcbiAgICAgICAgICAuLi5kb21haW5Cb3ggLy8gc2V0IHgxLCB4MiwgeTEsIHkyXG4gICAgICAgIH0pXG4gICAgICB9XTtcbiAgICB9XG4gICAgLy8gaWYgdGhlIGV2ZW50IG9jY3VycyBvdXRzaWRlIHRoZSByZWdpb24sIG9yIGlmIHRoZSB3aG9sZSBkb21haW4gaXMgc2VsZWN0ZWQsXG4gICAgLy8gc3RhcnQgYSBuZXcgc2VsZWN0aW9uXG4gICAgcmV0dXJuIGFsbG93RHJhdyA/IFt7XG4gICAgICB0YXJnZXQ6IFwicGFyZW50XCIsXG4gICAgICBtdXRhdGlvbjogKCkgPT4gKHtcbiAgICAgICAgaXNTZWxlY3Rpbmc6IGFsbG93UmVzaXplIHx8IGRlZmF1bHRCcnVzaEFyZWEgPT09IFwibW92ZVwiLFxuICAgICAgICBkb21haW5Cb3gsXG4gICAgICAgIGZ1bGxEb21haW5Cb3gsXG4gICAgICAgIHBhcmVudFNWRyxcbiAgICAgICAgY2FjaGVkQnJ1c2hEb21haW46IGJydXNoRG9tYWluLFxuICAgICAgICBjYWNoZWRDdXJyZW50RG9tYWluOiBjdXJyZW50RG9tYWluLFxuICAgICAgICBjdXJyZW50RG9tYWluOiB0aGlzLmdldE1pbmltdW1Eb21haW4oKSxcbiAgICAgICAgLi4udGhpcy5nZXRTZWxlY3Rpb25NdXRhdGlvbih7XG4gICAgICAgICAgeCxcbiAgICAgICAgICB5XG4gICAgICAgIH0sIGRvbWFpbkJveCwgYnJ1c2hEaW1lbnNpb24pXG4gICAgICB9KVxuICAgIH1dIDoge307XG4gIH0sXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBtYXgtc3RhdGVtZW50cywgY29tcGxleGl0eVxuICBvbkdsb2JhbE1vdXNlTW92ZShldnQsIHRhcmdldFByb3BzKSB7XG4gICAgY29uc3Qge1xuICAgICAgc2NhbGUsXG4gICAgICBpc1Bhbm5pbmcsXG4gICAgICBpc1NlbGVjdGluZyxcbiAgICAgIGZ1bGxEb21haW5Cb3gsXG4gICAgICBvbkJydXNoRG9tYWluQ2hhbmdlLFxuICAgICAgYWxsb3dSZXNpemUsXG4gICAgICBhbGxvd0RyYWcsXG4gICAgICBob3Jpem9udGFsLFxuICAgICAgbW91c2VNb3ZlVGhyZXNob2xkLFxuICAgICAgcGFyZW50U1ZHXG4gICAgfSA9IHRhcmdldFByb3BzO1xuICAgIGNvbnN0IGJydXNoRGltZW5zaW9uID0gdGhpcy5nZXREaW1lbnNpb24odGFyZ2V0UHJvcHMpO1xuICAgIGNvbnN0IHtcbiAgICAgIHgsXG4gICAgICB5XG4gICAgfSA9IF92aWN0b3J5Q29yZS5TZWxlY3Rpb24uZ2V0U1ZHRXZlbnRDb29yZGluYXRlcyhldnQsIHBhcmVudFNWRyk7XG4gICAgaWYgKCFhbGxvd1Jlc2l6ZSAmJiAhYWxsb3dEcmFnIHx8IG1vdXNlTW92ZVRocmVzaG9sZCA+IDAgJiYgIXRoaXMuaGFzTW92ZWQoe1xuICAgICAgLi4udGFyZ2V0UHJvcHMsXG4gICAgICB4MjogeCxcbiAgICAgIHkyOiB5XG4gICAgfSkpIHtcbiAgICAgIHJldHVybiB7fTtcbiAgICB9XG4gICAgaWYgKGFsbG93RHJhZyAmJiBpc1Bhbm5pbmcpIHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgc3RhcnRYLFxuICAgICAgICBzdGFydFlcbiAgICAgIH0gPSB0YXJnZXRQcm9wcztcbiAgICAgIGNvbnN0IHBhbm5lZEJveCA9IHRoaXMucGFuQm94KHRhcmdldFByb3BzLCB7XG4gICAgICAgIHgsXG4gICAgICAgIHlcbiAgICAgIH0pO1xuICAgICAgY29uc3QgY29uc3RyYWluZWRCb3ggPSB0aGlzLmNvbnN0cmFpbkJveChwYW5uZWRCb3gsIGZ1bGxEb21haW5Cb3gpO1xuICAgICAgY29uc3QgY3VycmVudERvbWFpbiA9IF92aWN0b3J5Q29yZS5TZWxlY3Rpb24uZ2V0Qm91bmRzKHtcbiAgICAgICAgLi4uY29uc3RyYWluZWRCb3gsXG4gICAgICAgIHNjYWxlLFxuICAgICAgICBob3Jpem9udGFsXG4gICAgICB9KTtcbiAgICAgIGNvbnN0IG11dGF0ZWRQcm9wcyA9IHtcbiAgICAgICAgY3VycmVudERvbWFpbixcbiAgICAgICAgcGFyZW50U1ZHLFxuICAgICAgICBzdGFydFg6IHBhbm5lZEJveC54MiA+PSBmdWxsRG9tYWluQm94LngyIHx8IHBhbm5lZEJveC54MSA8PSBmdWxsRG9tYWluQm94LngxID8gc3RhcnRYIDogeCxcbiAgICAgICAgc3RhcnRZOiBwYW5uZWRCb3gueTIgPj0gZnVsbERvbWFpbkJveC55MiB8fCBwYW5uZWRCb3gueTEgPD0gZnVsbERvbWFpbkJveC55MSA/IHN0YXJ0WSA6IHksXG4gICAgICAgIC4uLmNvbnN0cmFpbmVkQm94XG4gICAgICB9O1xuICAgICAgaWYgKF92aWN0b3J5Q29yZS5IZWxwZXJzLmlzRnVuY3Rpb24ob25CcnVzaERvbWFpbkNoYW5nZSkpIHtcbiAgICAgICAgb25CcnVzaERvbWFpbkNoYW5nZShjdXJyZW50RG9tYWluLCAoMCwgX2RlZmF1bHRzMi5kZWZhdWx0KSh7fSwgbXV0YXRlZFByb3BzLCB0YXJnZXRQcm9wcykpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFt7XG4gICAgICAgIHRhcmdldDogXCJwYXJlbnRcIixcbiAgICAgICAgbXV0YXRpb246ICgpID0+IG11dGF0ZWRQcm9wc1xuICAgICAgfV07XG4gICAgfSBlbHNlIGlmIChhbGxvd1Jlc2l6ZSAmJiBpc1NlbGVjdGluZykge1xuICAgICAgY29uc3Qge1xuICAgICAgICB4OiB4MixcbiAgICAgICAgeTogeTJcbiAgICAgIH0gPSB0aGlzLmNvbnN0cmFpblBvaW50KHtcbiAgICAgICAgeDogYnJ1c2hEaW1lbnNpb24gIT09IFwieVwiID8geCA6IHRhcmdldFByb3BzLngyLFxuICAgICAgICB5OiBicnVzaERpbWVuc2lvbiAhPT0gXCJ4XCIgPyB5IDogdGFyZ2V0UHJvcHMueTJcbiAgICAgIH0sIGZ1bGxEb21haW5Cb3gpO1xuICAgICAgY29uc3QgY3VycmVudERvbWFpbiA9IF92aWN0b3J5Q29yZS5TZWxlY3Rpb24uZ2V0Qm91bmRzKHtcbiAgICAgICAgeDIsXG4gICAgICAgIHkyLFxuICAgICAgICB4MTogdGFyZ2V0UHJvcHMueDEsXG4gICAgICAgIHkxOiB0YXJnZXRQcm9wcy55MSxcbiAgICAgICAgc2NhbGUsXG4gICAgICAgIGhvcml6b250YWxcbiAgICAgIH0pO1xuICAgICAgY29uc3QgbXV0YXRlZFByb3BzID0ge1xuICAgICAgICB4MixcbiAgICAgICAgeTIsXG4gICAgICAgIGN1cnJlbnREb21haW4sXG4gICAgICAgIHBhcmVudFNWR1xuICAgICAgfTtcbiAgICAgIGlmIChfdmljdG9yeUNvcmUuSGVscGVycy5pc0Z1bmN0aW9uKG9uQnJ1c2hEb21haW5DaGFuZ2UpKSB7XG4gICAgICAgIG9uQnJ1c2hEb21haW5DaGFuZ2UoY3VycmVudERvbWFpbiwgKDAsIF9kZWZhdWx0czIuZGVmYXVsdCkoe30sIG11dGF0ZWRQcm9wcywgdGFyZ2V0UHJvcHMpKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBbe1xuICAgICAgICB0YXJnZXQ6IFwicGFyZW50XCIsXG4gICAgICAgIG11dGF0aW9uOiAoKSA9PiBtdXRhdGVkUHJvcHNcbiAgICAgIH1dO1xuICAgIH1cbiAgICByZXR1cm4ge307XG4gIH0sXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb21wbGV4aXR5XG4gIG9uR2xvYmFsTW91c2VVcChldnQsIHRhcmdldFByb3BzKSB7XG4gICAgLy8gaWYgYSBwYW5uaW5nIG9yIHNlbGVjdGlvbiBoYXMgbm90IGJlZW4gc3RhcnRlZCwgaWdub3JlIHRoZSBldmVudFxuICAgIGlmICghdGFyZ2V0UHJvcHMuaXNQYW5uaW5nICYmICF0YXJnZXRQcm9wcy5pc1NlbGVjdGluZykge1xuICAgICAgcmV0dXJuIHt9O1xuICAgIH1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG1heC1zdGF0ZW1lbnRzLCBjb21wbGV4aXR5XG4gICAgY29uc3Qge1xuICAgICAgeDEsXG4gICAgICB5MSxcbiAgICAgIHgyLFxuICAgICAgeTIsXG4gICAgICBpc1Bhbm5pbmcsXG4gICAgICBpc1NlbGVjdGluZyxcbiAgICAgIG9uQnJ1c2hEb21haW5DaGFuZ2UsXG4gICAgICBvbkJydXNoRG9tYWluQ2hhbmdlRW5kLFxuICAgICAgb25CcnVzaENsZWFyZWQsXG4gICAgICBjdXJyZW50RG9tYWluLFxuICAgICAgYWxsb3dSZXNpemUsXG4gICAgICBhbGxvd0RyYWdcbiAgICB9ID0gdGFyZ2V0UHJvcHM7XG4gICAgY29uc3QgZGVmYXVsdEJydXNoQXJlYSA9ICFhbGxvd1Jlc2l6ZSAmJiAhdGFyZ2V0UHJvcHMuZGVmYXVsdEJydXNoQXJlYSA/IFwibW92ZVwiIDogdGFyZ2V0UHJvcHMuZGVmYXVsdEJydXNoQXJlYTtcbiAgICBjb25zdCBkZWZhdWx0QnJ1c2hIYXNBcmVhID0gZGVmYXVsdEJydXNoQXJlYSAhPT0gdW5kZWZpbmVkICYmIGRlZmF1bHRCcnVzaEFyZWEgIT09IFwibm9uZVwiO1xuICAgIGNvbnN0IG11dGF0ZWRQcm9wcyA9IHtcbiAgICAgIGlzUGFubmluZzogZmFsc2UsXG4gICAgICBpc1NlbGVjdGluZzogZmFsc2VcbiAgICB9O1xuXG4gICAgLy8gaWYgdGhlIG1vdXNlIGhhc24ndCBtb3ZlZCBzaW5jZSBhIG1vdXNlRG93biBldmVudCwgc2VsZWN0IHRoZSBkZWZhdWx0IGJydXNoIGFyZWFcbiAgICBpZiAoKGFsbG93UmVzaXplIHx8IGRlZmF1bHRCcnVzaEhhc0FyZWEpICYmICh4MSA9PT0geDIgfHwgeTEgPT09IHkyKSkge1xuICAgICAgY29uc3QgY2FjaGVkRG9tYWluID0gdGFyZ2V0UHJvcHMuY2FjaGVkQ3VycmVudERvbWFpbiB8fCBjdXJyZW50RG9tYWluO1xuICAgICAgY29uc3QgZGVmYXVsdERvbWFpbiA9IHRoaXMuZ2V0RGVmYXVsdEJydXNoQXJlYSh0YXJnZXRQcm9wcywgY2FjaGVkRG9tYWluLCBldnQpO1xuICAgICAgbXV0YXRlZFByb3BzLmN1cnJlbnREb21haW4gPSBkZWZhdWx0RG9tYWluO1xuICAgICAgaWYgKF92aWN0b3J5Q29yZS5IZWxwZXJzLmlzRnVuY3Rpb24ob25CcnVzaERvbWFpbkNoYW5nZSkpIHtcbiAgICAgICAgb25CcnVzaERvbWFpbkNoYW5nZShkZWZhdWx0RG9tYWluLCAoMCwgX2RlZmF1bHRzMi5kZWZhdWx0KSh7fSwgbXV0YXRlZFByb3BzLCB0YXJnZXRQcm9wcykpO1xuICAgICAgfVxuICAgICAgaWYgKF92aWN0b3J5Q29yZS5IZWxwZXJzLmlzRnVuY3Rpb24ob25CcnVzaERvbWFpbkNoYW5nZUVuZCkpIHtcbiAgICAgICAgb25CcnVzaERvbWFpbkNoYW5nZUVuZChkZWZhdWx0RG9tYWluLCAoMCwgX2RlZmF1bHRzMi5kZWZhdWx0KSh7fSwgbXV0YXRlZFByb3BzLCB0YXJnZXRQcm9wcykpO1xuICAgICAgfVxuICAgICAgaWYgKF92aWN0b3J5Q29yZS5IZWxwZXJzLmlzRnVuY3Rpb24ob25CcnVzaENsZWFyZWQpKSB7XG4gICAgICAgIG9uQnJ1c2hDbGVhcmVkKGRlZmF1bHREb21haW4sICgwLCBfZGVmYXVsdHMyLmRlZmF1bHQpKHt9LCBtdXRhdGVkUHJvcHMsIHRhcmdldFByb3BzKSk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChhbGxvd0RyYWcgJiYgaXNQYW5uaW5nIHx8IGFsbG93UmVzaXplICYmIGlzU2VsZWN0aW5nKSB7XG4gICAgICBpZiAoX3ZpY3RvcnlDb3JlLkhlbHBlcnMuaXNGdW5jdGlvbihvbkJydXNoRG9tYWluQ2hhbmdlRW5kKSkge1xuICAgICAgICBvbkJydXNoRG9tYWluQ2hhbmdlRW5kKGN1cnJlbnREb21haW4sICgwLCBfZGVmYXVsdHMyLmRlZmF1bHQpKHt9LCBtdXRhdGVkUHJvcHMsIHRhcmdldFByb3BzKSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBbe1xuICAgICAgdGFyZ2V0OiBcInBhcmVudFwiLFxuICAgICAgbXV0YXRpb246ICgpID0+IG11dGF0ZWRQcm9wc1xuICAgIH1dO1xuICB9XG59O1xuY29uc3QgQnJ1c2hIZWxwZXJzID0gZXhwb3J0cy5CcnVzaEhlbHBlcnMgPSB7XG4gIC4uLkhlbHBlcnMsXG4gIG9uTW91c2VEb3duOiBIZWxwZXJzLm9uTW91c2VEb3duLmJpbmQoSGVscGVycyksXG4gIG9uR2xvYmFsTW91c2VVcDogSGVscGVycy5vbkdsb2JhbE1vdXNlVXAuYmluZChIZWxwZXJzKSxcbiAgb25HbG9iYWxNb3VzZU1vdmU6ICgwLCBfdGhyb3R0bGUyLmRlZmF1bHQpKEhlbHBlcnMub25HbG9iYWxNb3VzZU1vdmUuYmluZChIZWxwZXJzKSwgMTYsXG4gIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbWFnaWMtbnVtYmVyc1xuICB7XG4gICAgbGVhZGluZzogdHJ1ZSxcbiAgICB0cmFpbGluZzogZmFsc2VcbiAgfSlcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/victory-brush-container/lib/brush-helpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/victory-brush-container/lib/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/victory-brush-container/lib/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar _victoryBrushContainer = __webpack_require__(/*! ./victory-brush-container */ \"(ssr)/./node_modules/victory-brush-container/lib/victory-brush-container.js\");\nObject.keys(_victoryBrushContainer).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _victoryBrushContainer[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _victoryBrushContainer[key];\n    }\n  });\n});\nvar _brushHelpers = __webpack_require__(/*! ./brush-helpers */ \"(ssr)/./node_modules/victory-brush-container/lib/brush-helpers.js\");\nObject.keys(_brushHelpers).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _brushHelpers[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _brushHelpers[key];\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdmljdG9yeS1icnVzaC1jb250YWluZXIvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLDZCQUE2QixtQkFBTyxDQUFDLDhHQUEyQjtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7QUFDRCxvQkFBb0IsbUJBQU8sQ0FBQywwRkFBaUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVtcC8uL25vZGVfbW9kdWxlcy92aWN0b3J5LWJydXNoLWNvbnRhaW5lci9saWIvaW5kZXguanM/NjU4NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbnZhciBfdmljdG9yeUJydXNoQ29udGFpbmVyID0gcmVxdWlyZShcIi4vdmljdG9yeS1icnVzaC1jb250YWluZXJcIik7XG5PYmplY3Qua2V5cyhfdmljdG9yeUJydXNoQ29udGFpbmVyKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgaWYgKGtleSA9PT0gXCJkZWZhdWx0XCIgfHwga2V5ID09PSBcIl9fZXNNb2R1bGVcIikgcmV0dXJuO1xuICBpZiAoa2V5IGluIGV4cG9ydHMgJiYgZXhwb3J0c1trZXldID09PSBfdmljdG9yeUJydXNoQ29udGFpbmVyW2tleV0pIHJldHVybjtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gX3ZpY3RvcnlCcnVzaENvbnRhaW5lcltrZXldO1xuICAgIH1cbiAgfSk7XG59KTtcbnZhciBfYnJ1c2hIZWxwZXJzID0gcmVxdWlyZShcIi4vYnJ1c2gtaGVscGVyc1wiKTtcbk9iamVjdC5rZXlzKF9icnVzaEhlbHBlcnMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICBpZiAoa2V5ID09PSBcImRlZmF1bHRcIiB8fCBrZXkgPT09IFwiX19lc01vZHVsZVwiKSByZXR1cm47XG4gIGlmIChrZXkgaW4gZXhwb3J0cyAmJiBleHBvcnRzW2tleV0gPT09IF9icnVzaEhlbHBlcnNba2V5XSkgcmV0dXJuO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBfYnJ1c2hIZWxwZXJzW2tleV07XG4gICAgfVxuICB9KTtcbn0pOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/victory-brush-container/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/victory-brush-container/lib/victory-brush-container.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/victory-brush-container/lib/victory-brush-container.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.VictoryBrushContainer = void 0;\nexports.brushContainerMixin = brushContainerMixin;\nvar _defaults2 = _interopRequireDefault(__webpack_require__(/*! lodash/defaults */ \"(ssr)/./node_modules/lodash/defaults.js\"));\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar _victoryCore = __webpack_require__(/*! victory-core */ \"(ssr)/./node_modules/victory-core/lib/index.js\");\nvar _brushHelpers = __webpack_require__(/*! ./brush-helpers */ \"(ssr)/./node_modules/victory-brush-container/lib/brush-helpers.js\");\nvar _reactFastCompare = _interopRequireDefault(__webpack_require__(/*! react-fast-compare */ \"(ssr)/./node_modules/react-fast-compare/index.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction brushContainerMixin(Base) {\n  // @ts-expect-error \"TS2545: A mixin class must have a constructor with a single rest parameter of type 'any[]'.\"\n  return class VictoryBrushContainer extends Base {\n    static displayName = \"VictoryBrushContainer\";\n    static defaultProps = {\n      ..._victoryCore.VictoryContainer.defaultProps,\n      allowDrag: true,\n      allowDraw: true,\n      allowResize: true,\n      brushComponent: /*#__PURE__*/_react.default.createElement(_victoryCore.Rect, null),\n      brushStyle: {\n        stroke: \"transparent\",\n        fill: \"black\",\n        fillOpacity: 0.1\n      },\n      handleComponent: /*#__PURE__*/_react.default.createElement(_victoryCore.Rect, null),\n      handleStyle: {\n        stroke: \"transparent\",\n        fill: \"transparent\"\n      },\n      handleWidth: 8,\n      mouseMoveThreshold: 0\n    };\n    static defaultEvents(props) {\n      return [{\n        target: \"parent\",\n        eventHandlers: {\n          onMouseDown: (evt, targetProps) => {\n            return props.disable ? {} : _brushHelpers.BrushHelpers.onMouseDown(evt, targetProps);\n          },\n          onTouchStart: (evt, targetProps) => {\n            return props.disable ? {} : _brushHelpers.BrushHelpers.onMouseDown(evt, targetProps);\n          },\n          onGlobalMouseMove: (evt, targetProps) => {\n            return props.disable || !targetProps.isPanning && !targetProps.isSelecting ? {} : _brushHelpers.BrushHelpers.onGlobalMouseMove(evt, targetProps);\n          },\n          onGlobalTouchMove: (evt, targetProps) => {\n            return props.disable || !targetProps.isPanning && !targetProps.isSelecting ? {} : _brushHelpers.BrushHelpers.onGlobalMouseMove(evt, targetProps);\n          },\n          onGlobalMouseUp: (evt, targetProps) => {\n            return props.disable ? {} : _brushHelpers.BrushHelpers.onGlobalMouseUp(evt, targetProps);\n          },\n          onGlobalTouchEnd: (evt, targetProps) => {\n            return props.disable ? {} : _brushHelpers.BrushHelpers.onGlobalMouseUp(evt, targetProps);\n          },\n          onGlobalTouchCancel: (evt, targetProps) => {\n            return props.disable ? {} : _brushHelpers.BrushHelpers.onGlobalMouseUp(evt, targetProps);\n          }\n        }\n      }];\n    }\n    getSelectBox(props, coordinates) {\n      const {\n        x,\n        y\n      } = coordinates;\n      const {\n        brushStyle,\n        brushComponent,\n        name\n      } = props;\n      const brushComponentStyle = brushComponent.props && brushComponent.props.style;\n      const cursor = !props.allowDrag && !props.allowResize ? \"auto\" : \"move\";\n      return x[0] !== x[1] && y[0] !== y[1] ? /*#__PURE__*/_react.default.cloneElement(brushComponent, {\n        key: `${name}-brush`,\n        width: Math.abs(x[1] - x[0]) || 1,\n        height: Math.abs(y[1] - y[0]) || 1,\n        x: Math.min(x[0], x[1]),\n        y: Math.min(y[0], y[1]),\n        cursor,\n        style: (0, _defaults2.default)({}, brushComponentStyle, brushStyle)\n      }) : null;\n    }\n    getCursorPointers(props) {\n      const cursors = {\n        yProps: \"ns-resize\",\n        xProps: \"ew-resize\"\n      };\n      if (!props.allowResize && props.allowDrag) {\n        cursors.xProps = \"move\";\n        cursors.yProps = \"move\";\n      } else if (!props.allowResize && !props.allowDrag) {\n        cursors.xProps = \"auto\";\n        cursors.yProps = \"auto\";\n      }\n      return cursors;\n    }\n    getHandles(props, domain) {\n      const {\n        handleWidth,\n        handleStyle,\n        handleComponent,\n        name\n      } = props;\n      const domainBox = _brushHelpers.BrushHelpers.getDomainBox(props, domain);\n      const {\n        x1,\n        x2,\n        y1,\n        y2\n      } = domainBox;\n      const {\n        top,\n        bottom,\n        left,\n        right\n      } = _brushHelpers.BrushHelpers.getHandles(props, domainBox);\n      const width = Math.abs(x2 - x1) || 1;\n      const height = Math.abs(y2 - y1) || 1;\n      const handleComponentStyle = handleComponent.props && handleComponent.props.style || {};\n      const style = (0, _defaults2.default)({}, handleComponentStyle, handleStyle);\n      const cursors = this.getCursorPointers(props);\n      const yProps = {\n        style,\n        width,\n        height: handleWidth,\n        cursor: cursors.yProps\n      };\n      const xProps = {\n        style,\n        width: handleWidth,\n        height,\n        cursor: cursors.xProps\n      };\n      const handleProps = {\n        top: top && Object.assign({\n          x: top.x1,\n          y: top.y1\n        }, yProps),\n        bottom: bottom && Object.assign({\n          x: bottom.x1,\n          y: bottom.y1\n        }, yProps),\n        left: left && Object.assign({\n          y: left.y1,\n          x: left.x1\n        }, xProps),\n        right: right && Object.assign({\n          y: right.y1,\n          x: right.x1\n        }, xProps)\n      };\n      const handles = [\"top\", \"bottom\", \"left\", \"right\"].reduce((memo, curr) => handleProps[curr] ? memo.concat( /*#__PURE__*/_react.default.cloneElement(handleComponent, Object.assign({\n        key: `${name}-handle-${curr}`\n      }, handleProps[curr]))) : memo, []);\n      return handles.length ? handles : null;\n    }\n    getRect(props) {\n      const {\n        currentDomain,\n        cachedBrushDomain\n      } = props;\n      const brushDomain = (0, _defaults2.default)({}, props.brushDomain, props.domain);\n      const domain = (0, _reactFastCompare.default)(brushDomain, cachedBrushDomain) ? (0, _defaults2.default)({}, currentDomain, brushDomain) : brushDomain;\n      const coordinates = _victoryCore.Selection.getDomainCoordinates(props, domain);\n      const selectBox = this.getSelectBox(props, coordinates);\n      return selectBox ? [selectBox, this.getHandles(props, domain)] : [];\n    }\n\n    // Overrides method in VictoryContainer\n    getChildren(props) {\n      return [..._react.default.Children.toArray(props.children), ...this.getRect(props)];\n    }\n  };\n}\nconst VictoryBrushContainer = exports.VictoryBrushContainer = brushContainerMixin(_victoryCore.VictoryContainer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/victory-brush-container/lib/victory-brush-container.js\n");

/***/ })

};
;