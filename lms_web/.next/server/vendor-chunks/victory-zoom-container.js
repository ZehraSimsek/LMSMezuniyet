"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/victory-zoom-container";
exports.ids = ["vendor-chunks/victory-zoom-container"];
exports.modules = {

/***/ "(ssr)/./node_modules/victory-zoom-container/lib/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/victory-zoom-container/lib/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar _victoryZoomContainer = __webpack_require__(/*! ./victory-zoom-container */ \"(ssr)/./node_modules/victory-zoom-container/lib/victory-zoom-container.js\");\nObject.keys(_victoryZoomContainer).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _victoryZoomContainer[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _victoryZoomContainer[key];\n    }\n  });\n});\nvar _zoomHelpers = __webpack_require__(/*! ./zoom-helpers */ \"(ssr)/./node_modules/victory-zoom-container/lib/zoom-helpers.js\");\nObject.keys(_zoomHelpers).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _zoomHelpers[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _zoomHelpers[key];\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdmljdG9yeS16b29tLWNvbnRhaW5lci9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsNEJBQTRCLG1CQUFPLENBQUMsMkdBQTBCO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQztBQUNELG1CQUFtQixtQkFBTyxDQUFDLHVGQUFnQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZW1wLy4vbm9kZV9tb2R1bGVzL3ZpY3Rvcnktem9vbS1jb250YWluZXIvbGliL2luZGV4LmpzPzE0MmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG52YXIgX3ZpY3Rvcnlab29tQ29udGFpbmVyID0gcmVxdWlyZShcIi4vdmljdG9yeS16b29tLWNvbnRhaW5lclwiKTtcbk9iamVjdC5rZXlzKF92aWN0b3J5Wm9vbUNvbnRhaW5lcikuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gIGlmIChrZXkgPT09IFwiZGVmYXVsdFwiIHx8IGtleSA9PT0gXCJfX2VzTW9kdWxlXCIpIHJldHVybjtcbiAgaWYgKGtleSBpbiBleHBvcnRzICYmIGV4cG9ydHNba2V5XSA9PT0gX3ZpY3Rvcnlab29tQ29udGFpbmVyW2tleV0pIHJldHVybjtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gX3ZpY3Rvcnlab29tQ29udGFpbmVyW2tleV07XG4gICAgfVxuICB9KTtcbn0pO1xudmFyIF96b29tSGVscGVycyA9IHJlcXVpcmUoXCIuL3pvb20taGVscGVyc1wiKTtcbk9iamVjdC5rZXlzKF96b29tSGVscGVycykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gIGlmIChrZXkgPT09IFwiZGVmYXVsdFwiIHx8IGtleSA9PT0gXCJfX2VzTW9kdWxlXCIpIHJldHVybjtcbiAgaWYgKGtleSBpbiBleHBvcnRzICYmIGV4cG9ydHNba2V5XSA9PT0gX3pvb21IZWxwZXJzW2tleV0pIHJldHVybjtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gX3pvb21IZWxwZXJzW2tleV07XG4gICAgfVxuICB9KTtcbn0pOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/victory-zoom-container/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/victory-zoom-container/lib/victory-zoom-container.js":
/*!***************************************************************************!*\
  !*** ./node_modules/victory-zoom-container/lib/victory-zoom-container.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.VictoryZoomContainer = void 0;\nexports.zoomContainerMixin = zoomContainerMixin;\nvar _defaults2 = _interopRequireDefault(__webpack_require__(/*! lodash/defaults */ \"(ssr)/./node_modules/lodash/defaults.js\"));\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar _zoomHelpers = __webpack_require__(/*! ./zoom-helpers */ \"(ssr)/./node_modules/victory-zoom-container/lib/zoom-helpers.js\");\nvar _victoryCore = __webpack_require__(/*! victory-core */ \"(ssr)/./node_modules/victory-core/lib/index.js\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst DEFAULT_DOWNSAMPLE = 150;\nfunction zoomContainerMixin(Base) {\n  // @ts-expect-error \"TS2545: A mixin class must have a constructor with a single rest parameter of type 'any[]'.\"\n  return class VictoryZoomContainer extends Base {\n    static displayName = \"VictoryZoomContainer\";\n    static defaultProps = {\n      ..._victoryCore.VictoryContainer.defaultProps,\n      clipContainerComponent: /*#__PURE__*/_react.default.createElement(_victoryCore.VictoryClipContainer, null),\n      allowPan: true,\n      allowZoom: true,\n      zoomActive: false\n    };\n    static defaultEvents(props) {\n      return [{\n        target: \"parent\",\n        eventHandlers: {\n          onMouseDown: (evt, targetProps) => {\n            return props.disable ? {} : _zoomHelpers.ZoomHelpers.onMouseDown(evt, targetProps);\n          },\n          onTouchStart: (evt, targetProps) => {\n            return props.disable ? {} : _zoomHelpers.ZoomHelpers.onMouseDown(evt, targetProps);\n          },\n          onMouseUp: (evt, targetProps) => {\n            return props.disable ? {} : _zoomHelpers.ZoomHelpers.onMouseUp(evt, targetProps);\n          },\n          onTouchEnd: (evt, targetProps) => {\n            return props.disable ? {} : _zoomHelpers.ZoomHelpers.onMouseUp(evt, targetProps);\n          },\n          onMouseLeave: (evt, targetProps) => {\n            return props.disable ? {} : _zoomHelpers.ZoomHelpers.onMouseLeave(evt, targetProps);\n          },\n          onTouchCancel: (evt, targetProps) => {\n            return props.disable ? {} : _zoomHelpers.ZoomHelpers.onMouseLeave(evt, targetProps);\n          },\n          // eslint-disable-next-line max-params\n          onMouseMove: (evt, targetProps, eventKey, ctx) => {\n            if (props.disable) {\n              return {};\n            }\n            return _zoomHelpers.ZoomHelpers.onMouseMove(evt, targetProps, eventKey, ctx);\n          },\n          // eslint-disable-next-line max-params\n          onTouchMove: (evt, targetProps, eventKey, ctx) => {\n            if (props.disable) {\n              return {};\n            }\n            evt.preventDefault();\n            return _zoomHelpers.ZoomHelpers.onMouseMove(evt, targetProps, eventKey, ctx);\n          },\n          ...(props.disable || !props.allowZoom ? {} : {\n            onWheel: _zoomHelpers.ZoomHelpers.onWheel\n          })\n        }\n      }];\n    }\n    clipDataComponents(children, props) {\n      const {\n        scale,\n        clipContainerComponent,\n        polar,\n        origin,\n        horizontal\n      } = props;\n      const rangeX = horizontal ? scale.y.range() : scale.x.range();\n      const rangeY = horizontal ? scale.x.range() : scale.y.range();\n      const plottableWidth = Math.abs(rangeX[0] - rangeX[1]);\n      const plottableHeight = Math.abs(rangeY[0] - rangeY[1]);\n      const radius = Math.max(...rangeY);\n      const groupComponent = /*#__PURE__*/_react.default.cloneElement(clipContainerComponent, {\n        clipWidth: plottableWidth,\n        clipHeight: plottableHeight,\n        translateX: Math.min(...rangeX),\n        translateY: Math.min(...rangeY),\n        polar,\n        origin: polar ? origin : undefined,\n        radius: polar ? radius : undefined,\n        ...clipContainerComponent.props\n      });\n      return _react.default.Children.toArray(children).map(child => {\n        if (!_victoryCore.Data.isDataComponent(child)) {\n          return child;\n        }\n        return /*#__PURE__*/_react.default.cloneElement(child, {\n          groupComponent\n        });\n      });\n    }\n    modifyPolarDomain(domain, originalDomain) {\n      // Only zoom the radius of polar charts. Zooming angles is very confusing\n      return {\n        x: originalDomain.x,\n        y: [0, domain.y[1]]\n      };\n    }\n    downsampleZoomData(props, child, domain) {\n      const {\n        downsample\n      } = props;\n      const getData = childProps => {\n        const {\n          data,\n          x,\n          y\n        } = childProps;\n        const defaultGetData = child.type && _victoryCore.Helpers.isFunction(child.type.getData) ? child.type.getData : () => undefined;\n        // skip costly data formatting if x and y accessors are not present\n        return Array.isArray(data) && !x && !y ? data : defaultGetData(childProps);\n      };\n      const data = getData(child.props);\n\n      // return undefined if downsample is not run, then default() will replace with child.props.data\n      if (!downsample || !domain || !data) {\n        return undefined;\n      }\n      const maxPoints = downsample === true ? DEFAULT_DOWNSAMPLE : downsample;\n      const dimension = props.zoomDimension || \"x\";\n\n      // important: assumes data is ordered by dimension\n      // get the start and end of the data that is in the current visible domain\n      let startIndex = data.findIndex(d => d[dimension] >= domain[dimension][0]);\n      let endIndex = data.findIndex(d => d[dimension] > domain[dimension][1]);\n      // pick one more point (if available) at each end so that VictoryLine, VictoryArea connect\n      if (startIndex !== 0) {\n        startIndex -= 1;\n      }\n      if (endIndex !== -1) {\n        endIndex += 1;\n      }\n      const visibleData = data.slice(startIndex, endIndex);\n      return _victoryCore.Data.downsample(visibleData, maxPoints, startIndex);\n    }\n    modifyChildren(props) {\n      const childComponents = _react.default.Children.toArray(props.children);\n      return childComponents.map(child => {\n        const role = child.type && child.type.role;\n        const isDataComponent = _victoryCore.Data.isDataComponent(child);\n        const {\n          currentDomain,\n          zoomActive,\n          allowZoom\n        } = props;\n        const originalDomain = (0, _defaults2.default)({}, props.originalDomain, props.domain);\n        const zoomDomain = (0, _defaults2.default)({}, props.zoomDomain, props.domain);\n        const cachedZoomDomain = (0, _defaults2.default)({}, props.cachedZoomDomain, props.domain);\n        let domain;\n        if (!_zoomHelpers.ZoomHelpers.checkDomainEquality(zoomDomain, cachedZoomDomain)) {\n          // if zoomDomain has been changed, use it\n          domain = zoomDomain;\n        } else if (allowZoom && !zoomActive) {\n          // if user has zoomed all the way out, use the child domain\n          domain = child.props.domain;\n        } else {\n          // default: use currentDomain, set by the event handlers\n          domain = (0, _defaults2.default)({}, currentDomain, originalDomain);\n        }\n        let newDomain = props.polar ? this.modifyPolarDomain(domain, originalDomain) : domain;\n        if (newDomain && props.zoomDimension) {\n          // if zooming is restricted to a dimension, don't squash changes to zoomDomain in other dim\n          newDomain = {\n            ...zoomDomain,\n            [props.zoomDimension]: newDomain[props.zoomDimension]\n          };\n        }\n        // don't downsample stacked data\n        const newProps = isDataComponent && role !== \"stack\" ? {\n          domain: newDomain,\n          data: this.downsampleZoomData(props, child, newDomain)\n        } : {\n          domain: newDomain\n        };\n        return /*#__PURE__*/_react.default.cloneElement(child, (0, _defaults2.default)(newProps, child.props));\n      });\n    }\n\n    // Overrides method in VictoryContainer\n    getChildren(props) {\n      const children = this.modifyChildren(props);\n      return this.clipDataComponents(children, props);\n    }\n  };\n}\nconst VictoryZoomContainer = exports.VictoryZoomContainer = zoomContainerMixin(_victoryCore.VictoryContainer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/victory-zoom-container/lib/victory-zoom-container.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/victory-zoom-container/lib/zoom-helpers.js":
/*!*****************************************************************!*\
  !*** ./node_modules/victory-zoom-container/lib/zoom-helpers.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.ZoomHelpers = exports.RawZoomHelpers = void 0;\nvar _delay2 = _interopRequireDefault(__webpack_require__(/*! lodash/delay */ \"(ssr)/./node_modules/lodash/delay.js\"));\nvar _defaults2 = _interopRequireDefault(__webpack_require__(/*! lodash/defaults */ \"(ssr)/./node_modules/lodash/defaults.js\"));\nvar _throttle2 = _interopRequireDefault(__webpack_require__(/*! lodash/throttle */ \"(ssr)/./node_modules/lodash/throttle.js\"));\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar _victoryCore = __webpack_require__(/*! victory-core */ \"(ssr)/./node_modules/victory-core/lib/index.js\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/* eslint no-magic-numbers: [\"error\", { \"ignore\": [-1, 0, 1, 2, 1000] }]*/\n\nconst RawZoomHelpers = exports.RawZoomHelpers = {\n  checkDomainEquality(a, b) {\n    const checkDimension = dim => {\n      const val1 = a && a[dim];\n      const val2 = b && b[dim];\n      if (!val1 && !val2) {\n        return true;\n      } else if (!val1 || !val2) {\n        return false;\n      }\n      return Number(val1[0]) === Number(val2[0]) && Number(val1[1]) === Number(val2[1]);\n    };\n    return checkDimension(\"x\") && checkDimension(\"y\");\n  },\n  /**\n   * Generates a new domain scaled by factor and constrained by the original domain.\n   * @param  {[Number, Number]} currentDomain  The domain to be scaled.\n   * @param  {Object} evt the event object\n   * @param  {Object} props the props of the targeted component\n   * @param  {String} axis the desired dimension (either x or y)\n   * @return {[Number, Number]}                The scale domain\n   */\n  // eslint-disable-next-line max-params\n  scale(currentDomain, evt, props, axis) {\n    const [from, to] = currentDomain;\n    const range = Math.abs(to - from);\n    const minimumZoom = props.minimumZoom && props.minimumZoom[axis];\n    const factor = this.getScaleFactor(evt);\n    if (minimumZoom && range <= minimumZoom && factor < 1) {\n      return currentDomain;\n    }\n    const [fromBound, toBound] = this.getDomain(props)[axis];\n    const percent = this.getScalePercent(evt, props, axis);\n    const point = factor * from + percent * (factor * range);\n    const minDomain = this.getMinimumDomain(point, props, axis);\n    const [newMin, newMax] = this.getScaledDomain(currentDomain, factor, percent);\n    const newDomain = [newMin > fromBound && newMin < toBound ? newMin : fromBound, newMax < toBound && newMax > fromBound ? newMax : toBound];\n    const domain = Math.abs(minDomain[1] - minDomain[0]) > Math.abs(newDomain[1] - newDomain[0]) ? minDomain : newDomain;\n    return _victoryCore.Collection.containsDates([fromBound, toBound]) ? [new Date(domain[0]), new Date(domain[1])] : domain;\n  },\n  getScaledDomain(currentDomain, factor, percent) {\n    const [from, to] = currentDomain;\n    const range = Math.abs(to - from);\n    const diff = range - range * factor;\n    const newMin = Number(from) + diff * percent;\n    const newMax = Number(to) - diff * (1 - percent);\n    return [Math.min(newMin, newMax), Math.max(newMin, newMax)];\n  },\n  getMinimumDomain(point, props, axis) {\n    const {\n      minimumZoom\n    } = props;\n    const originalDomain = this.getDomain(props)[axis];\n    const [from, to] = originalDomain;\n    const defaultMin = Math.abs(from - to) / 1000;\n    const extent = minimumZoom ? minimumZoom[axis] || defaultMin : defaultMin;\n    const minExtent = point - extent / 2;\n    const maxExtent = point + extent / 2;\n    return [minExtent > from && minExtent < to ? minExtent : from, maxExtent < to && maxExtent > from ? maxExtent : Number(from) + extent / 2];\n  },\n  zoommingOut(evt) {\n    return evt.deltaY > 0;\n  },\n  getScaleFactor(evt) {\n    const sign = this.zoommingOut(evt) ? 1 : -1;\n    // eslint-disable-next-line no-magic-numbers\n    const delta = Math.min(Math.abs(evt.deltaY / 300), 0.5); // TODO: Check scale factor\n    return Math.abs(1 + sign * delta);\n  },\n  getScalePercent(evt, props, axis) {\n    const originalDomain = this.getDomain(props);\n    const [from, to] = originalDomain[axis];\n    const position = this.getPosition(evt, props, originalDomain);\n    return (position[axis] - from) / Math.abs(to - from);\n  },\n  getPosition(evt, props, originalDomain) {\n    const {\n      x,\n      y\n    } = _victoryCore.Selection.getSVGEventCoordinates(evt);\n    const originalScale = {\n      x: props.scale.x.domain(originalDomain.x),\n      y: props.scale.y.domain(originalDomain.y)\n    };\n    return _victoryCore.Selection.getDataCoordinates(props, originalScale, x, y);\n  },\n  /**\n   * Generate a new domain translated by the delta and constrained by the original domain.\n   * @param  {[Number, Number]} currentDomain  The domain to be translated.\n   * @param  {[Number, Number]} originalDomain The original domain for the data set.\n   * @param  {Number}           delta          The delta to translate by\n   * @return {[Number, Number]}                The translated domain\n   */\n  pan(currentDomain, originalDomain, delta) {\n    const [fromCurrent, toCurrent] = currentDomain.map(val => Number(val));\n    const [fromOriginal, toOriginal] = originalDomain.map(val => Number(val));\n    const lowerBound = fromCurrent + delta;\n    const upperBound = toCurrent + delta;\n    let newDomain;\n    if (lowerBound > fromOriginal && upperBound < toOriginal) {\n      newDomain = [lowerBound, upperBound];\n    } else if (lowerBound < fromOriginal) {\n      // Clamp to lower limit\n      const dx = toCurrent - fromCurrent;\n      newDomain = [fromOriginal, fromOriginal + dx];\n    } else if (upperBound > toOriginal) {\n      // Clamp to upper limit\n      const dx = toCurrent - fromCurrent;\n      newDomain = [toOriginal - dx, toOriginal];\n    } else {\n      newDomain = currentDomain;\n    }\n    return _victoryCore.Collection.containsDates(currentDomain) || _victoryCore.Collection.containsDates(originalDomain) ? newDomain.map(val => new Date(val)) : newDomain;\n  },\n  getDomainScale(domain, scale, axis) {\n    const axisDomain = Array.isArray(domain) ? domain : domain[axis];\n    const [from, to] = axisDomain;\n    const range = scale[axis].range();\n    const plottableWidth = Math.abs(range[0] - range[1]);\n    return plottableWidth / (to - from);\n  },\n  handleAnimation(ctx) {\n    const animationTimer = ctx.context.animationTimer;\n    const transitionTimer = ctx.context.transitionTimer;\n    transitionTimer.bypassAnimation();\n    animationTimer.bypassAnimation();\n    const resumeAnimation = () => {\n      animationTimer.resumeAnimation();\n      transitionTimer.resumeAnimation();\n    };\n    // delay the callback that resumes animation by ~1 frame so that animation does not interfere with wheel events\n    return (0, _delay2.default)(resumeAnimation, 16); // eslint-disable-line no-magic-numbers\n  },\n  getLastDomain(targetProps, originalDomain) {\n    const {\n      zoomDomain,\n      cachedZoomDomain,\n      currentDomain,\n      domain\n    } = targetProps;\n    if (zoomDomain && !this.checkDomainEquality(zoomDomain, cachedZoomDomain)) {\n      return (0, _defaults2.default)({}, zoomDomain, domain);\n    }\n    return (0, _defaults2.default)({}, currentDomain || zoomDomain || originalDomain, domain);\n  },\n  getDomain(props) {\n    const {\n      originalDomain,\n      domain,\n      children,\n      zoomDimension\n    } = props;\n    const childComponents = _react.Children.toArray(children);\n    let childrenDomain = {};\n    if (childComponents.length) {\n      childrenDomain = zoomDimension ? {\n        [zoomDimension]: _victoryCore.Wrapper.getDomainFromChildren(props, zoomDimension, childComponents)\n      } : {\n        x: _victoryCore.Wrapper.getDomainFromChildren(props, \"x\", childComponents),\n        y: _victoryCore.Wrapper.getDomainFromChildren(props, \"y\", childComponents)\n      };\n    }\n    return (0, _defaults2.default)({}, childrenDomain, originalDomain, domain);\n  },\n  onMouseDown(evt, targetProps) {\n    evt.preventDefault();\n    if (!targetProps.allowPan) {\n      return undefined;\n    }\n    const parentSVG = targetProps.parentSVG || _victoryCore.Selection.getParentSVG(evt);\n    const {\n      x,\n      y\n    } = _victoryCore.Selection.getSVGEventCoordinates(evt, parentSVG);\n    return [{\n      target: \"parent\",\n      mutation: () => {\n        return {\n          startX: x,\n          startY: y,\n          panning: true,\n          parentSVG,\n          parentControlledProps: [\"domain\"]\n        };\n      }\n    }];\n  },\n  onMouseUp(evt, targetProps) {\n    if (!targetProps.allowPan) {\n      return undefined;\n    }\n    return [{\n      target: \"parent\",\n      mutation: () => {\n        return {\n          panning: false\n        };\n      }\n    }];\n  },\n  onMouseLeave(evt, targetProps) {\n    if (!targetProps.allowPan) {\n      return undefined;\n    }\n    return [{\n      target: \"parent\",\n      mutation: () => {\n        return {\n          panning: false\n        };\n      }\n    }];\n  },\n  // eslint-disable-next-line max-params, max-statements\n  onMouseMove(evt, targetProps, eventKey, ctx) {\n    if (targetProps.panning && targetProps.allowPan) {\n      const {\n        scale,\n        startX,\n        startY,\n        onZoomDomainChange,\n        zoomDomain,\n        zoomDimension,\n        horizontal\n      } = targetProps;\n      const parentSVG = targetProps.parentSVG || _victoryCore.Selection.getParentSVG(evt);\n      const {\n        x,\n        y\n      } = _victoryCore.Selection.getSVGEventCoordinates(evt, parentSVG);\n      const originalDomain = this.getDomain(targetProps);\n      const lastDomain = this.getLastDomain(targetProps, originalDomain);\n      const deltaX = horizontal ? y - startY : startX - x;\n      const deltaY = horizontal ? startX - x : y - startY;\n      const dx = deltaX / this.getDomainScale(lastDomain, scale, \"x\");\n      const dy = deltaY / this.getDomainScale(lastDomain, scale, \"y\");\n      const currentDomain = {\n        x: zoomDimension === \"y\" ? originalDomain.x : this.pan(lastDomain.x, originalDomain.x, dx),\n        y: zoomDimension === \"x\" ? originalDomain.y : this.pan(lastDomain.y, originalDomain.y, dy)\n      };\n      const resumeAnimation = this.handleAnimation(ctx);\n      const zoomActive = !this.checkDomainEquality(originalDomain, lastDomain);\n      const mutatedProps = {\n        parentControlledProps: [\"domain\"],\n        startX: x,\n        startY: y,\n        parentSVG,\n        currentDomain,\n        originalDomain,\n        cachedZoomDomain: zoomDomain,\n        zoomActive\n      };\n      if (_victoryCore.Helpers.isFunction(onZoomDomainChange)) {\n        onZoomDomainChange(currentDomain, (0, _defaults2.default)({}, mutatedProps, targetProps));\n      }\n      return [{\n        target: \"parent\",\n        callback: resumeAnimation,\n        mutation: () => mutatedProps\n      }];\n    }\n    return undefined;\n  },\n  // eslint-disable-next-line max-params\n  onWheel(evt, targetProps, eventKey, ctx) {\n    if (!targetProps.allowZoom) {\n      return undefined;\n    }\n    const {\n      onZoomDomainChange,\n      zoomDimension,\n      zoomDomain\n    } = targetProps;\n    const originalDomain = this.getDomain(targetProps);\n    const lastDomain = this.getLastDomain(targetProps, originalDomain);\n    const {\n      x,\n      y\n    } = lastDomain;\n    const currentDomain = {\n      x: zoomDimension === \"y\" ? lastDomain.x : this.scale(x, evt, targetProps, \"x\"),\n      y: zoomDimension === \"x\" ? lastDomain.y : this.scale(y, evt, targetProps, \"y\")\n    };\n    const resumeAnimation = this.handleAnimation(ctx);\n    const zoomActive = !this.zoommingOut(evt) ||\n    // if zoomming in or\n    //   if zoomActive is already set AND user hasn't zoommed out all the way\n    targetProps.zoomActive && !this.checkDomainEquality(originalDomain, lastDomain);\n    const mutatedProps = {\n      currentDomain,\n      originalDomain,\n      cachedZoomDomain: zoomDomain,\n      parentControlledProps: [\"domain\"],\n      panning: false,\n      zoomActive\n    };\n    if (_victoryCore.Helpers.isFunction(onZoomDomainChange)) {\n      onZoomDomainChange(currentDomain, (0, _defaults2.default)({}, mutatedProps, targetProps));\n    }\n    return [{\n      target: \"parent\",\n      callback: resumeAnimation,\n      mutation: () => mutatedProps\n    }];\n  }\n};\nconst ZoomHelpers = exports.ZoomHelpers = {\n  checkDomainEquality: RawZoomHelpers.checkDomainEquality.bind(RawZoomHelpers),\n  onMouseDown: RawZoomHelpers.onMouseDown.bind(RawZoomHelpers),\n  onMouseUp: RawZoomHelpers.onMouseUp.bind(RawZoomHelpers),\n  onMouseLeave: RawZoomHelpers.onMouseLeave.bind(RawZoomHelpers),\n  onMouseMove: (0, _throttle2.default)(RawZoomHelpers.onMouseMove.bind(RawZoomHelpers), 16,\n  // eslint-disable-line no-magic-numbers\n  {\n    leading: true,\n    trailing: false\n  }),\n  onWheel: (0, _throttle2.default)(RawZoomHelpers.onWheel.bind(RawZoomHelpers), 16,\n  // eslint-disable-line no-magic-numbers\n  {\n    leading: true,\n    trailing: false\n  })\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/victory-zoom-container/lib/zoom-helpers.js\n");

/***/ })

};
;