"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/victory-axis";
exports.ids = ["vendor-chunks/victory-axis"];
exports.modules = {

/***/ "(ssr)/./node_modules/victory-axis/lib/helper-methods.js":
/*!*********************************************************!*\
  !*** ./node_modules/victory-axis/lib/helper-methods.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.getStyles = exports.getBaseProps = void 0;\nvar _defaults2 = _interopRequireDefault(__webpack_require__(/*! lodash/defaults */ \"(ssr)/./node_modules/lodash/defaults.js\"));\nvar _victoryCore = __webpack_require__(/*! victory-core */ \"(ssr)/./node_modules/victory-core/lib/index.js\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst orientationSign = {\n  top: -1,\n  left: -1,\n  right: 1,\n  bottom: 1\n};\nconst exists = val => val !== null && val !== undefined;\nconst getCurrentAxis = (props, axis) => {\n  const {\n    orientation,\n    horizontal\n  } = props;\n  if (orientation) {\n    const dimensions = {\n      top: \"x\",\n      bottom: \"x\",\n      left: \"y\",\n      right: \"y\"\n    };\n    return dimensions[orientation];\n  }\n  const otherAxis = axis === \"x\" ? \"y\" : \"x\";\n  return horizontal ? otherAxis : axis;\n};\nconst getScale = props => {\n  const axis = _victoryCore.Axis.getAxis(props);\n  const currentAxis = getCurrentAxis(props, axis);\n  const scale = _victoryCore.Scale.getBaseScale(props, axis);\n  const propsDomain = props.domain && props.domain[axis];\n  const domain = propsDomain || _victoryCore.Axis.getDomain(props) || scale.domain();\n  scale.range(_victoryCore.Helpers.getRange(props, currentAxis));\n  scale.domain(domain);\n  return scale;\n};\nconst getStyleObject = props => {\n  const {\n    theme,\n    dependentAxis\n  } = props;\n  const generalAxisStyle = theme && theme.axis && theme.axis.style;\n  const axisType = dependentAxis ? \"dependentAxis\" : \"independentAxis\";\n  const specificAxisStyle = theme && theme[axisType] && theme[axisType].style;\n  const mergeStyles = () => {\n    const styleNamespaces = [\"axis\", \"axisLabel\", \"grid\", \"parent\", \"tickLabels\", \"ticks\"];\n    return styleNamespaces.reduce((memo, curr) => {\n      memo[curr] = (0, _defaults2.default)({}, specificAxisStyle[curr], generalAxisStyle[curr]);\n      return memo;\n    }, {});\n  };\n  return generalAxisStyle && specificAxisStyle ? mergeStyles() : specificAxisStyle || generalAxisStyle;\n};\nconst getStyles = function (props, styleObject) {\n  if (styleObject === void 0) {\n    styleObject = {};\n  }\n  const style = props.style || {};\n  const parentStyleProps = {\n    height: \"100%\",\n    width: \"100%\"\n  };\n  return {\n    parent: (0, _defaults2.default)(style.parent, styleObject.parent, parentStyleProps),\n    axis: (0, _defaults2.default)({}, style.axis, styleObject.axis),\n    axisLabel: (0, _defaults2.default)({}, style.axisLabel, styleObject.axisLabel),\n    grid: (0, _defaults2.default)({}, style.grid, styleObject.grid),\n    ticks: (0, _defaults2.default)({}, style.ticks, styleObject.ticks),\n    tickLabels: (0, _defaults2.default)({}, style.tickLabels, styleObject.tickLabels)\n  };\n};\nexports.getStyles = getStyles;\nconst getTickProps = (layout, style, datum) => {\n  const {\n    position,\n    transform\n  } = layout;\n  return {\n    x1: transform.x,\n    y1: transform.y,\n    x2: transform.x + position.x2,\n    y2: transform.y + position.y2,\n    style,\n    datum\n  };\n};\n\n// eslint-disable-next-line max-params\nconst getTickLabelProps = (layout, style, anchors, datum, text) => {\n  const {\n    position,\n    transform\n  } = layout;\n  return {\n    style,\n    x: transform.x + position.x,\n    y: transform.y + position.y,\n    verticalAnchor: anchors.verticalAnchor,\n    textAnchor: anchors.textAnchor,\n    angle: style.angle,\n    text,\n    datum\n  };\n};\nconst getGridProps = (layout, style, datum) => {\n  const {\n    edge,\n    transform\n  } = layout;\n  return {\n    x1: transform.x,\n    y1: transform.y,\n    x2: edge.x + transform.x,\n    y2: edge.y + transform.y,\n    style,\n    datum\n  };\n};\nconst getAxisProps = (modifiedProps, calculatedValues, globalTransform) => {\n  const {\n    style,\n    padding,\n    isVertical\n  } = calculatedValues;\n  const {\n    width,\n    height\n  } = modifiedProps;\n  return {\n    style: style.axis,\n    x1: isVertical ? globalTransform.x : padding.left + globalTransform.x,\n    x2: isVertical ? globalTransform.x : width - padding.right + globalTransform.x,\n    y1: isVertical ? padding.top + globalTransform.y : globalTransform.y,\n    y2: isVertical ? height - padding.bottom + globalTransform.y : globalTransform.y\n  };\n};\nconst getEvaluatedStyles = (style, props) => {\n  return {\n    tickStyle: _victoryCore.Helpers.evaluateStyle(style.ticks, props),\n    labelStyle: _victoryCore.Helpers.evaluateStyle(style.tickLabels, props),\n    gridStyle: _victoryCore.Helpers.evaluateStyle(style.grid, props)\n  };\n};\nconst getAxisLabelProps = (props, calculatedValues, globalTransform) => {\n  const {\n    style,\n    orientation,\n    padding,\n    labelPadding,\n    isVertical\n  } = calculatedValues;\n  const sign = orientationSign[orientation];\n  const hPadding = padding.left + padding.right;\n  const vPadding = padding.top + padding.bottom;\n  const verticalAnchor = sign < 0 ? \"end\" : \"start\";\n  const labelStyle = style.axisLabel;\n  const angle = isVertical ? -90 : 0; // eslint-disable-line no-magic-numbers\n  const x = isVertical ? globalTransform.x + sign * labelPadding : (props.width - hPadding) / 2 + padding.left + globalTransform.x;\n  const y = isVertical ? (props.height - vPadding) / 2 + padding.top + globalTransform.y : sign * labelPadding + globalTransform.y;\n  return {\n    x,\n    y,\n    verticalAnchor: labelStyle.verticalAnchor || verticalAnchor,\n    textAnchor: labelStyle.textAnchor || \"middle\",\n    angle: labelStyle.angle === undefined ? angle : labelStyle.angle,\n    style: labelStyle,\n    text: props.label\n  };\n};\nconst getAnchors = (orientation, isVertical) => {\n  const anchorOrientation = {\n    top: \"end\",\n    left: \"end\",\n    right: \"start\",\n    bottom: \"start\"\n  };\n  const anchor = anchorOrientation[orientation];\n  return {\n    textAnchor: isVertical ? anchor : \"middle\",\n    verticalAnchor: isVertical ? \"middle\" : anchor\n  };\n};\nconst getLabelPadding = (props, style) => {\n  const labelStyle = style.axisLabel || {};\n  if (labelStyle.padding !== undefined && labelStyle.padding !== null) {\n    return labelStyle.padding;\n  }\n  const isVertical = _victoryCore.Axis.isVertical(props);\n  // TODO: magic numbers\n  /* eslint-disable no-magic-numbers*/\n  const fontSize = labelStyle.fontSize || 14;\n  return props.label ? fontSize * (isVertical ? 2.3 : 1.6) : 0;\n  /* eslint-enable no-magic-numbers*/\n};\nconst getDefaultOrientations = (axis, originSign, horizontal) => {\n  const sign = originSign || \"positive\";\n  const orientations = {\n    positive: {\n      x: \"bottom\",\n      y: \"left\"\n    },\n    negative: {\n      x: \"top\",\n      y: \"right\"\n    }\n  };\n  const horizontalOrientations = {\n    positive: {\n      x: \"left\",\n      y: \"bottom\"\n    },\n    negative: {\n      x: \"right\",\n      y: \"top\"\n    }\n  };\n  return horizontal ? horizontalOrientations[sign][axis] : orientations[sign][axis];\n};\nconst getStandaloneOffset = (props, calculatedValues) => {\n  const {\n    style,\n    scale,\n    orientation,\n    padding,\n    axis,\n    ticks,\n    stringTicks,\n    isVertical,\n    labelPadding\n  } = calculatedValues;\n  const {\n    polar,\n    horizontal\n  } = props;\n  const sharedProps = {\n    scale: {\n      [axis]: scale\n    },\n    polar,\n    horizontal,\n    ticks,\n    stringTicks\n  };\n  const xPadding = orientation === \"right\" ? padding.right : padding.left;\n  const yPadding = orientation === \"top\" ? padding.top : padding.bottom;\n  const offsetX = props.offsetX !== null && props.offsetX !== undefined ? props.offsetX : xPadding;\n  const offsetY = props.offsetY !== null && props.offsetY !== undefined ? props.offsetY : yPadding;\n  const fontSize = style.axisLabel.fontSize || 14; // eslint-disable-line no-magic-numbers\n  const tickSizes = ticks.map((data, index) => {\n    const tick = stringTicks ? props.tickValues[data - 1] : data;\n    const tickStyle = _victoryCore.Helpers.evaluateStyle(style.ticks, Object.assign({}, sharedProps, {\n      tick,\n      index\n    }));\n    return tickStyle.size || 0;\n  });\n  const totalPadding = fontSize + 2 * Math.max(...tickSizes) + labelPadding;\n  const minimumPadding = 1.2 * fontSize; // eslint-disable-line no-magic-numbers\n  const x = isVertical ? totalPadding : minimumPadding;\n  const y = isVertical ? minimumPadding : totalPadding;\n  return {\n    x: offsetX !== null && offsetX !== undefined ? offsetX : x,\n    y: offsetY !== null && offsetY !== undefined ? offsetY : y\n  };\n};\nconst isEqual = (a, b) => {\n  if (a instanceof Date && b instanceof Date) {\n    return a.getTime() === b.getTime();\n  }\n  return a === b;\n};\n\n// eslint-disable-next-line complexity\nconst getOffset = (props, calculatedValues) => {\n  const {\n    scale,\n    origin,\n    orientation,\n    orientations,\n    domain,\n    padding\n  } = calculatedValues;\n  const {\n    top,\n    bottom,\n    left,\n    right\n  } = padding;\n  const calculatedOrientation = {\n    x: orientation === \"bottom\" || orientation === \"top\" ? orientation : orientations.x,\n    y: orientation === \"left\" || orientation === \"right\" ? orientation : orientations.y\n  };\n\n  // make the axes line up, and cross when appropriate\n  const orientationOffset = {\n    x: calculatedOrientation.y === \"left\" ? left : right,\n    y: calculatedOrientation.x === \"bottom\" ? bottom : top\n  };\n  const originOffset = {\n    x: calculatedOrientation.y === \"left\" ? 0 : props.width,\n    y: calculatedOrientation.x === \"bottom\" ? props.height : 0\n  };\n  const originPosition = {\n    x: isEqual(origin.x, domain.x[0]) || isEqual(origin.x, domain.x[1]) ? 0 : scale.x(origin.x),\n    y: isEqual(origin.y, domain.y[0]) || isEqual(origin.y, domain.y[1]) ? 0 : scale.y(origin.y)\n  };\n  const x = originPosition.x ? Math.abs(originOffset.x - originPosition.x) : orientationOffset.x;\n  const y = originPosition.y ? Math.abs(originOffset.y - originPosition.y) : orientationOffset.y;\n  const offsetX = exists(props.offsetX) ? props.offsetX : x;\n  const offsetY = exists(props.offsetY) ? props.offsetY : y;\n  return {\n    x: offsetX,\n    y: offsetY\n  };\n};\n\n// eslint-disable-next-line complexity\nconst getHorizontalOffset = (props, calculatedValues) => {\n  const {\n    scale,\n    origin,\n    orientation,\n    orientations,\n    domain,\n    padding\n  } = calculatedValues;\n  const {\n    top,\n    bottom,\n    left,\n    right\n  } = padding;\n  const calculatedOrientation = {\n    y: orientation === \"bottom\" || orientation === \"top\" ? orientation : orientations.x,\n    x: orientation === \"left\" || orientation === \"right\" ? orientation : orientations.y\n  };\n\n  // make the axes line up, and cross when appropriate\n  const orientationOffset = {\n    x: calculatedOrientation.y === \"bottom\" ? bottom : top,\n    y: calculatedOrientation.x === \"left\" ? left : right\n  };\n  const originOffset = {\n    y: calculatedOrientation.x === \"left\" ? 0 : props.width,\n    x: calculatedOrientation.y === \"bottom\" ? props.height : 0\n  };\n  const originPosition = {\n    x: isEqual(origin.x, domain.x[0]) || isEqual(origin.x, domain.x[1]) ? 0 : scale.x(origin.x),\n    y: isEqual(origin.y, domain.y[0]) || isEqual(origin.y, domain.y[1]) ? 0 : scale.y(origin.y)\n  };\n  const y = originPosition.x ? Math.abs(originOffset.x - originPosition.x) : orientationOffset.x;\n  const x = originPosition.y ? Math.abs(originOffset.y - originPosition.y) : orientationOffset.y;\n  const offsetX = exists(props.offsetX) ? props.offsetX : x;\n  const offsetY = exists(props.offsetY) ? props.offsetY : y;\n  return {\n    x: offsetX,\n    y: offsetY\n  };\n};\nconst getTransform = (props, calculatedValues, offset) => {\n  const {\n    orientation,\n    axis\n  } = calculatedValues;\n  const axisValue = _victoryCore.Axis.getAxisValue(props, axis);\n  return {\n    top: {\n      x: 0,\n      y: axisValue !== undefined ? axisValue : offset.y\n    },\n    bottom: {\n      x: 0,\n      y: axisValue !== undefined ? axisValue : props.height - offset.y\n    },\n    left: {\n      x: axisValue !== undefined ? axisValue : offset.x,\n      y: 0\n    },\n    right: {\n      x: axisValue !== undefined ? axisValue : props.width - offset.x,\n      y: 0\n    }\n  }[orientation];\n};\nconst getTickPosition = (style, orientation, isVertical) => {\n  const {\n    tickStyle,\n    labelStyle\n  } = style;\n  const size = tickStyle.size || 0;\n  const tickPadding = tickStyle.padding || 0;\n  const labelPadding = labelStyle.padding || 0;\n  const tickSpacing = size + tickPadding + labelPadding;\n  const sign = orientationSign[orientation];\n  return {\n    x: isVertical ? sign * tickSpacing : 0,\n    x2: isVertical ? sign * size : 0,\n    y: isVertical ? 0 : sign * tickSpacing,\n    y2: isVertical ? 0 : sign * size\n  };\n};\nconst getTickTransform = (tick, globalTransform, isVertical) => {\n  return {\n    x: isVertical ? globalTransform.x : tick + globalTransform.x,\n    y: isVertical ? tick + globalTransform.y : globalTransform.y\n  };\n};\nconst getGridEdge = (props, calculatedValues) => {\n  const {\n    orientation,\n    padding,\n    isVertical\n  } = calculatedValues;\n  const sign = -orientationSign[orientation];\n  const x = isVertical ? sign * (props.width - (padding.left + padding.right)) : 0;\n  const y = isVertical ? 0 : sign * (props.height - (padding.top + padding.bottom));\n  return {\n    x,\n    y\n  };\n};\nconst getGridOffset = (calculatedValues, offset) => {\n  const {\n    padding,\n    orientation,\n    crossAxis\n  } = calculatedValues;\n  const xPadding = orientation === \"right\" ? padding.right : padding.left;\n  const yPadding = orientation === \"top\" ? padding.top : padding.bottom;\n  return {\n    x: crossAxis ? offset.x - xPadding : 0,\n    y: crossAxis ? offset.y - yPadding : 0\n  };\n};\nconst getLayoutProps = (modifiedProps, calculatedValues) => {\n  let offset;\n  if (calculatedValues.domain.x && calculatedValues.domain.y) {\n    offset = modifiedProps.horizontal ? getHorizontalOffset(modifiedProps, calculatedValues) : getOffset(modifiedProps, calculatedValues);\n  } else {\n    offset = getStandaloneOffset(modifiedProps, calculatedValues);\n  }\n  return {\n    globalTransform: getTransform(modifiedProps, calculatedValues, offset),\n    gridOffset: getGridOffset(calculatedValues, offset),\n    gridEdge: getGridEdge(modifiedProps, calculatedValues)\n  };\n};\nconst getOrientation = props => {\n  if (props.orientation) {\n    return props.orientation;\n  }\n  const defaultOrientations = {\n    dependent: props.horizontal ? \"bottom\" : \"left\",\n    independent: props.horizontal ? \"left\" : \"bottom\"\n  };\n  return props.dependentAxis ? defaultOrientations.dependent : defaultOrientations.independent;\n};\n\n// eslint-disable-next-line complexity\nconst getCalculatedValues = props => {\n  const defaultStyles = getStyleObject(props);\n  const style = getStyles(props, defaultStyles);\n  const padding = _victoryCore.Helpers.getPadding(props);\n  const labelPadding = getLabelPadding(props, style);\n  const stringTicks = _victoryCore.Axis.stringTicks(props) ? props.tickValues : undefined;\n  const axis = _victoryCore.Axis.getAxis(props);\n  const axisDomain = _victoryCore.Axis.getDomain(props);\n  const axisScale = getScale(props);\n  const xAxisDomain = axis === \"x\" ? axisDomain : undefined;\n  const yAxisDomain = axis === \"y\" ? axisDomain : undefined;\n  const xAxisScale = axis === \"x\" ? axisScale : undefined;\n  const yAxisScale = axis === \"y\" ? axisScale : undefined;\n  const crossAxis = !(props.crossAxis === false || props.standalone === true);\n  const ticks = _victoryCore.Axis.getTicks(props, axisScale, crossAxis);\n  const tickFormat = _victoryCore.Axis.getTickFormat(props, axisScale);\n  const range = {\n    x: _victoryCore.Helpers.getRange(props, \"x\"),\n    y: _victoryCore.Helpers.getRange(props, \"y\")\n  };\n  // use full domain if passed in from parent,\n  // otherwise use the just the one axis available\n  const domain = {\n    x: props.domain && props.domain.x ? props.domain.x : xAxisDomain,\n    y: props.domain && props.domain.y ? props.domain.y : yAxisDomain\n  };\n  // use full scale if passed in from parent,\n  // otherwise use the just the one axis available\n  const scale = {\n    x: props.domain && props.domain.x ? _victoryCore.Scale.getBaseScale(props, \"x\").domain(props.domain.x).range(props.horizontal ? range.y : range.x) : xAxisScale,\n    y: props.domain && props.domain.y ? _victoryCore.Scale.getBaseScale(props, \"y\").domain(props.domain.y).range(props.horizontal ? range.x : range.y) : yAxisScale\n  };\n  const origin = domain.x && domain.y ? _victoryCore.Axis.getOrigin(domain) : undefined;\n  const originSign = origin ? {\n    x: _victoryCore.Axis.getOriginSign(origin.x, domain.x),\n    y: _victoryCore.Axis.getOriginSign(origin.y, domain.y)\n  } : undefined;\n  const orientations = originSign ? {\n    x: getDefaultOrientations(\"x\", originSign.y, props.horizontal),\n    y: getDefaultOrientations(\"y\", originSign.x, props.horizontal)\n  } : undefined;\n  const orientation = orientations ? props.orientation || orientations[axis] : getOrientation(props);\n  const isVertical = _victoryCore.Axis.isVertical(Object.assign({}, props, {\n    orientation\n  }));\n  const anchors = getAnchors(orientation, isVertical);\n  return {\n    anchors,\n    axis,\n    crossAxis,\n    domain,\n    isVertical,\n    labelPadding,\n    orientation,\n    orientations,\n    origin,\n    padding,\n    scale,\n    stringTicks,\n    style,\n    tickFormat,\n    ticks\n  };\n};\nconst getBaseProps = (initialProps, fallbackProps) => {\n  const props = _victoryCore.Axis.modifyProps(initialProps, fallbackProps);\n  const calculatedValues = getCalculatedValues(props);\n  const {\n    axis,\n    style,\n    orientation,\n    isVertical,\n    scale,\n    ticks,\n    tickFormat,\n    anchors,\n    domain,\n    stringTicks\n  } = calculatedValues;\n  const otherAxis = axis === \"x\" ? \"y\" : \"x\";\n  const {\n    width,\n    height,\n    standalone,\n    theme,\n    polar,\n    padding,\n    horizontal\n  } = props;\n  const {\n    globalTransform,\n    gridOffset,\n    gridEdge\n  } = getLayoutProps(props, calculatedValues);\n  const sharedProps = {\n    scale: {\n      [axis]: scale[axis]\n    },\n    polar,\n    horizontal,\n    ticks,\n    stringTicks\n  };\n  const axisProps = getAxisProps(props, calculatedValues, globalTransform);\n  const axisLabelProps = getAxisLabelProps(props, calculatedValues, globalTransform);\n  const initialChildProps = {\n    parent: Object.assign({\n      style: style.parent,\n      ticks,\n      standalone,\n      theme,\n      width,\n      height,\n      padding,\n      domain\n    }, sharedProps)\n  };\n  const gridProps = {\n    dimension: otherAxis,\n    range: {\n      [otherAxis]: _victoryCore.Helpers.getRange(props, otherAxis)\n    },\n    scale: props.scale && props.scale[otherAxis] ? {\n      [otherAxis]: props.scale[otherAxis]\n    } : undefined\n  };\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n  return ticks.reduce((childProps, tickValue, index) => {\n    const tick = stringTicks ? stringTicks[index] : tickValue;\n    const text = tickFormat(tickValue, index, ticks);\n    const styles = getEvaluatedStyles(style, Object.assign({}, sharedProps, {\n      tick,\n      tickValue,\n      index,\n      text\n    }));\n    const tickLayout = {\n      position: getTickPosition(styles, orientation, isVertical),\n      transform: getTickTransform(scale[axis]?.(tickValue), globalTransform, isVertical)\n    };\n    const gridLayout = {\n      edge: gridEdge,\n      transform: {\n        x: isVertical ? -gridOffset.x + globalTransform.x : scale[axis]?.(tickValue) + globalTransform.x,\n        y: isVertical ? scale[axis]?.(tickValue) + globalTransform.y : gridOffset.y + globalTransform.y\n      }\n    };\n    childProps[index] = {\n      axis: Object.assign({\n        dimension: axis\n      }, sharedProps, axisProps),\n      axisLabel: Object.assign({}, sharedProps, axisLabelProps),\n      ticks: Object.assign({}, sharedProps, getTickProps(tickLayout, styles.tickStyle, tickValue)),\n      tickLabels: Object.assign({}, sharedProps, getTickLabelProps(tickLayout, styles.labelStyle, anchors, tickValue, text)),\n      grid: Object.assign({}, sharedProps, gridProps, getGridProps(gridLayout, styles.gridStyle, tickValue))\n    };\n    return childProps;\n  }, initialChildProps);\n};\nexports.getBaseProps = getBaseProps;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/victory-axis/lib/helper-methods.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/victory-axis/lib/index.js":
/*!************************************************!*\
  !*** ./node_modules/victory-axis/lib/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar _victoryAxis = __webpack_require__(/*! ./victory-axis */ \"(ssr)/./node_modules/victory-axis/lib/victory-axis.js\");\nObject.keys(_victoryAxis).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _victoryAxis[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _victoryAxis[key];\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdmljdG9yeS1heGlzL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixtQkFBbUIsbUJBQU8sQ0FBQyw2RUFBZ0I7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVtcC8uL25vZGVfbW9kdWxlcy92aWN0b3J5LWF4aXMvbGliL2luZGV4LmpzP2JlZmQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG52YXIgX3ZpY3RvcnlBeGlzID0gcmVxdWlyZShcIi4vdmljdG9yeS1heGlzXCIpO1xuT2JqZWN0LmtleXMoX3ZpY3RvcnlBeGlzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgaWYgKGtleSA9PT0gXCJkZWZhdWx0XCIgfHwga2V5ID09PSBcIl9fZXNNb2R1bGVcIikgcmV0dXJuO1xuICBpZiAoa2V5IGluIGV4cG9ydHMgJiYgZXhwb3J0c1trZXldID09PSBfdmljdG9yeUF4aXNba2V5XSkgcmV0dXJuO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBfdmljdG9yeUF4aXNba2V5XTtcbiAgICB9XG4gIH0pO1xufSk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/victory-axis/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/victory-axis/lib/victory-axis.js":
/*!*******************************************************!*\
  !*** ./node_modules/victory-axis/lib/victory-axis.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.VictoryAxis = void 0;\nvar _isEmpty2 = _interopRequireDefault(__webpack_require__(/*! lodash/isEmpty */ \"(ssr)/./node_modules/lodash/isEmpty.js\"));\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar _victoryCore = __webpack_require__(/*! victory-core */ \"(ssr)/./node_modules/victory-core/lib/index.js\");\nvar _helperMethods = __webpack_require__(/*! ./helper-methods */ \"(ssr)/./node_modules/victory-axis/lib/helper-methods.js\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst fallbackProps = {\n  width: 450,\n  height: 300,\n  padding: 50\n};\nconst options = {\n  components: [{\n    name: \"axis\",\n    index: 0\n  }, {\n    name: \"axisLabel\",\n    index: 0\n  }, {\n    name: \"grid\"\n  }, {\n    name: \"parent\",\n    index: \"parent\"\n  }, {\n    name: \"ticks\"\n  }, {\n    name: \"tickLabels\"\n  }]\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\n\nclass VictoryAxisBase extends _react.default.Component {\n  static animationWhitelist = [\"style\", \"domain\", \"range\", \"tickCount\", \"tickValues\", \"offsetX\", \"offsetY\", \"padding\", \"width\", \"height\"];\n  static displayName = \"VictoryAxis\";\n  static role = \"axis\";\n  static defaultTransitions = {\n    onExit: {\n      duration: 500\n    },\n    onEnter: {\n      duration: 500\n    }\n  };\n  static defaultProps = {\n    axisComponent: /*#__PURE__*/_react.default.createElement(_victoryCore.LineSegment, null),\n    axisLabelComponent: /*#__PURE__*/_react.default.createElement(_victoryCore.VictoryLabel, null),\n    tickLabelComponent: /*#__PURE__*/_react.default.createElement(_victoryCore.VictoryLabel, null),\n    tickComponent: /*#__PURE__*/_react.default.createElement(_victoryCore.LineSegment, null),\n    gridComponent: /*#__PURE__*/_react.default.createElement(_victoryCore.LineSegment, null),\n    standalone: true,\n    theme: _victoryCore.VictoryTheme.grayscale,\n    containerComponent: /*#__PURE__*/_react.default.createElement(_victoryCore.VictoryContainer, null),\n    groupComponent: /*#__PURE__*/_react.default.createElement(\"g\", {\n      role: \"presentation\"\n    }),\n    fixLabelOverlap: false\n  };\n  static getDomain = _victoryCore.Axis.getDomain;\n  static getAxis = _victoryCore.Axis.getAxis;\n  static getStyles(props) {\n    return (0, _helperMethods.getStyles)(props);\n  }\n  static getBaseProps(props) {\n    return (0, _helperMethods.getBaseProps)(props, fallbackProps);\n  }\n  static expectedComponents = [\"axisComponent\", \"axisLabelComponent\", \"groupComponent\", \"containerComponent\", \"tickComponent\", \"tickLabelComponent\", \"gridComponent\"];\n  renderLine(props) {\n    const {\n      axisComponent\n    } = props;\n    const axisProps = this.getComponentProps(axisComponent, \"axis\", 0);\n    return /*#__PURE__*/_react.default.cloneElement(axisComponent, axisProps);\n  }\n  renderLabel(props) {\n    const {\n      axisLabelComponent,\n      label\n    } = props;\n    if (!label) {\n      return null;\n    }\n    const axisLabelProps = this.getComponentProps(axisLabelComponent, \"axisLabel\", 0);\n    return /*#__PURE__*/_react.default.cloneElement(axisLabelComponent, axisLabelProps);\n  }\n  renderGridAndTicks(props) {\n    const {\n      tickComponent,\n      tickLabelComponent,\n      gridComponent,\n      name\n    } = props;\n    const shouldRender = componentProps => {\n      const {\n        style = {},\n        events = {}\n      } = componentProps;\n      const visible = style.stroke !== \"transparent\" && style.stroke !== \"none\" && style.strokeWidth !== 0;\n      return visible || !(0, _isEmpty2.default)(events);\n    };\n    return this.dataKeys.map((key, index) => {\n      const tickProps = this.getComponentProps(tickComponent, \"ticks\", index);\n      const BaseTickComponent = /*#__PURE__*/_react.default.cloneElement(tickComponent, tickProps);\n      const TickComponent = shouldRender(BaseTickComponent.props) ? BaseTickComponent : undefined;\n      const gridProps = this.getComponentProps(gridComponent, \"grid\", index);\n      const BaseGridComponent = /*#__PURE__*/_react.default.cloneElement(gridComponent, gridProps);\n      const GridComponent = shouldRender(BaseGridComponent.props) ? BaseGridComponent : undefined;\n      const tickLabelProps = this.getComponentProps(tickLabelComponent, \"tickLabels\", index);\n      const TickLabel = /*#__PURE__*/_react.default.cloneElement(tickLabelComponent, tickLabelProps);\n      const children = [GridComponent, TickComponent, TickLabel].filter(Boolean);\n      return /*#__PURE__*/_react.default.cloneElement(props.groupComponent, {\n        key: `${name}-tick-group-${key}`\n      }, children);\n    });\n  }\n  fixLabelOverlap(gridAndTicks, props) {\n    const isVertical = _victoryCore.Axis.isVertical(props);\n    const size = isVertical ? props.height : props.width;\n    const isVictoryLabel = child => child.type && child.type.role === \"label\";\n    const labels = gridAndTicks.map(gridAndTick => gridAndTick.props.children).reduce((accumulator, childArr) => accumulator.concat(childArr), []).filter(isVictoryLabel).map(child => child.props);\n    const paddingToObject = padding => typeof padding === \"object\" ? Object.assign({}, {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }, padding) : {\n      top: padding,\n      right: padding,\n      bottom: padding,\n      left: padding\n    };\n    const labelsSumSize = labels.reduce((sum, label) => {\n      const padding = paddingToObject(label.style.padding);\n      const labelSize = _victoryCore.TextSize.approximateTextSize(label.text, {\n        angle: label.angle,\n        fontSize: label.style.fontSize,\n        letterSpacing: label.style.letterSpacing,\n        fontFamily: label.style.fontFamily\n      });\n      return sum + (isVertical ? labelSize.height + padding.top + padding.bottom : labelSize.width + padding.right + padding.left);\n    }, 0);\n    const availiableLabelCount = Math.floor(size * gridAndTicks.length / labelsSumSize);\n    const divider = Math.ceil(gridAndTicks.length / availiableLabelCount) || 1;\n    const getLabelCoord = gridAndTick => gridAndTick.props.children.filter(isVictoryLabel).reduce((prev, child) => (isVertical ? child.props.y : child.props.x) || 0, 0);\n    const sorted = gridAndTicks.sort((a, b) => isVertical ? getLabelCoord(b) - getLabelCoord(a) // ordinary axis has top-bottom orientation\n    : getLabelCoord(a) - getLabelCoord(b) // ordinary axis has left-right orientation\n    );\n    return sorted.filter((gridAndTick, index) => index % divider === 0);\n  }\n\n  // Overridden in native versions\n  shouldAnimate() {\n    return !!this.props.animate;\n  }\n  render() {\n    const {\n      animationWhitelist\n    } = VictoryAxis;\n    const props = _victoryCore.Axis.modifyProps(this.props, fallbackProps);\n    const userProps = _victoryCore.UserProps.getSafeUserProps(this.props);\n    if (this.shouldAnimate()) {\n      return this.animateComponent(props, animationWhitelist);\n    }\n    const gridAndTicks = this.renderGridAndTicks(props);\n    const modifiedGridAndTicks = props.fixLabelOverlap ? this.fixLabelOverlap(gridAndTicks, props) : gridAndTicks;\n    const children = [this.renderLine(props), this.renderLabel(props), ...modifiedGridAndTicks];\n    const container = /*#__PURE__*/_react.default.cloneElement(props.containerComponent, userProps);\n    return props.standalone ? this.renderContainer(container, children) : /*#__PURE__*/_react.default.cloneElement(props.groupComponent, userProps, children);\n  }\n}\nconst VictoryAxis = exports.VictoryAxis = (0, _victoryCore.addEvents)(VictoryAxisBase, options);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/victory-axis/lib/victory-axis.js\n");

/***/ })

};
;